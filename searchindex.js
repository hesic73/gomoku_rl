Search.setIndex({"docnames": ["gomoku_rl", "gomoku_rl.core", "gomoku_rl.env", "gomoku_rl.policy", "gomoku_rl.policy.base", "gomoku_rl.policy.common", "gomoku_rl.policy.dqn", "gomoku_rl.policy.ppo", "gomoku_rl.runner", "gomoku_rl.runner.base", "gomoku_rl.runner.independent_rl_runner", "gomoku_rl.runner.psro_runner", "gomoku_rl.utils", "gomoku_rl.utils.augment", "gomoku_rl.utils.elo", "gomoku_rl.utils.eval", "gomoku_rl.utils.log", "gomoku_rl.utils.misc", "gomoku_rl.utils.module", "gomoku_rl.utils.policy", "gomoku_rl.utils.psro", "gomoku_rl.utils.sampler", "gomoku_rl.utils.visual", "gomoku_rl.utils.wandb", "index", "modules"], "filenames": ["gomoku_rl.rst", "gomoku_rl.core.rst", "gomoku_rl.env.rst", "gomoku_rl.policy.rst", "gomoku_rl.policy.base.rst", "gomoku_rl.policy.common.rst", "gomoku_rl.policy.dqn.rst", "gomoku_rl.policy.ppo.rst", "gomoku_rl.runner.rst", "gomoku_rl.runner.base.rst", "gomoku_rl.runner.independent_rl_runner.rst", "gomoku_rl.runner.psro_runner.rst", "gomoku_rl.utils.rst", "gomoku_rl.utils.augment.rst", "gomoku_rl.utils.elo.rst", "gomoku_rl.utils.eval.rst", "gomoku_rl.utils.log.rst", "gomoku_rl.utils.misc.rst", "gomoku_rl.utils.module.rst", "gomoku_rl.utils.policy.rst", "gomoku_rl.utils.psro.rst", "gomoku_rl.utils.sampler.rst", "gomoku_rl.utils.visual.rst", "gomoku_rl.utils.wandb.rst", "index.rst", "modules.rst"], "titles": ["gomoku_rl package", "gomoku_rl.core module", "gomoku_rl.env module", "gomoku_rl.policy package", "gomoku_rl.policy.base module", "gomoku_rl.policy.common module", "gomoku_rl.policy.dqn module", "gomoku_rl.policy.ppo module", "gomoku_rl.runner package", "gomoku_rl.runner.base module", "gomoku_rl.runner.independent_rl_runner module", "gomoku_rl.runner.psro_runner module", "gomoku_rl.utils package", "gomoku_rl.utils.augment module", "gomoku_rl.utils.elo module", "gomoku_rl.utils.eval module", "gomoku_rl.utils.log module", "gomoku_rl.utils.misc module", "gomoku_rl.utils.module module", "gomoku_rl.utils.policy module", "gomoku_rl.utils.psro module", "gomoku_rl.utils.sampler module", "gomoku_rl.utils.visual module", "gomoku_rl.utils.wandb module", "Welcome to gomoku_rl\u2019s documentation!", "gomoku_rl"], "terms": {"polici": [0, 12, 20, 25], "base": [0, 1, 2, 3, 6, 7, 8, 10, 11, 13, 14, 16, 18, 20, 21], "common": [0, 3], "get_optim": [0, 3, 5], "make_crit": [0, 3, 5], "make_dataset_na": [0, 3, 5], "make_dqn_actor": [0, 3, 5], "make_egreedy_actor": [0, 3, 5], "make_ppo_ac": [0, 3, 5], "make_ppo_actor": [0, 3, 5], "dqn": [0, 3], "dqnpolici": [0, 3, 6], "get_replay_buff": [0, 3, 6], "ppo": [0, 3, 24], "ppopolici": [0, 3, 7, 24], "get_polici": [0, 3], "get_pretrained_polici": [0, 3], "runner": [0, 25], "sprunner": [0, 8, 9, 10, 11], "independent_rl_runn": [0, 8], "independentrlrunn": [0, 8, 10], "independentrlsprunn": [0, 8, 10], "psro_runn": [0, 8], "psrorunn": [0, 8, 11], "psrosprunn": [0, 8, 11], "util": [0, 24, 25], "augment": [0, 2, 12], "antidiagonalflip": [0, 12, 13], "diagonalflip": [0, 12, 13], "horizontalflip": [0, 12, 13], "ident": [0, 12, 13], "rotat": [0, 12, 13], "transform": [0, 12, 13], "verticalflip": [0, 12, 13], "augment_transit": [0, 12, 13], "get_augmented_transit": [0, 12, 13], "elo": [0, 12], "compute_elo_r": [0, 12, 14], "compute_expected_scor": [0, 12, 14], "eval": [0, 3, 4, 6, 7, 12, 20], "eval_win_r": [0, 12, 15], "get_payoff_matrix": [0, 12, 15], "log": [0, 12], "mean": [0, 12, 16], "get_log_func": [0, 12, 16], "misc": [0, 12], "add_prefix": [0, 12, 17], "get_kwarg": [0, 12, 17], "no_nan_in_tensordict": [0, 12, 17], "set_se": [0, 12, 17], "actornet": [0, 12, 18], "myduelingcnndqnet": [0, 12, 18], "policyhead": [0, 12, 18], "residualblock": [0, 12, 18], "residualtow": [0, 12, 18], "valuehead": [0, 12, 18], "valuenet": [0, 12, 18], "count_paramet": [0, 12, 18], "init_param": [0, 12, 18], "uniform_polici": [0, 12, 19, 20], "psro": [0, 12], "convergedind": [0, 12, 20], "psropolicywrapp": [0, 12, 20], "payofftyp": [0, 12, 20], "popul": [0, 12, 20], "calculate_jpc": [0, 12, 20], "get_meta_solv": [0, 12, 20], "get_new_payoff": [0, 12, 20], "get_new_payoffs_sp": [0, 12, 20], "init_payoffs_sp": [0, 12, 20], "print_payoff": [0, 12, 20], "solve_last_n": [0, 12, 20], "solve_nash": [0, 12, 20], "solve_uniform": [0, 12, 20], "sampler": [0, 6, 12], "sequentialsampl": [0, 12, 21], "visual": [0, 12], "annotate_heatmap": [0, 12, 22], "heatmap": [0, 12, 22], "payoff_headmap": [0, 12, 22], "wandb": [0, 12, 24], "dict_flatten": [0, 12, 23], "init_wandb": [0, 12, 23], "core": [0, 25], "gomoku": [0, 1, 24, 25], "__init__": [0, 1, 3, 4], "get_action_mask": [0, 1], "get_encoded_board": [0, 1], "is_valid": [0, 1], "reset": [0, 1, 2, 12, 20], "step": [0, 1, 2, 4, 6, 7], "compute_don": [0, 1, 25], "env": [0, 15, 20, 25], "gomokuenv": [0, 2, 15, 25], "_step": [0, 2], "_step_and_maybe_reset": [0, 2], "batch_siz": [0, 2, 5, 6, 21], "board_siz": [0, 1, 2, 13, 24], "devic": [0, 1, 2, 3, 4, 5, 6, 7, 20, 24], "num_env": [0, 1, 2, 24], "reset_rollout": [0, 2], "rollout": [0, 2], "rollout_fixed_oppon": [0, 2], "rollout_player_black": [0, 2], "rollout_player_whit": [0, 2], "rollout_self_plai": [0, 2], "make_transit": [0, 2, 25], "class": [1, 2, 4, 6, 7, 9, 10, 11, 13, 14, 16, 18, 20, 21], "int": [1, 2, 3, 5, 6, 7, 13, 15, 18, 20, 21], "15": [1, 20, 24], "none": [1, 2, 3, 4, 5, 6, 7, 16, 18, 20, 22], "sourc": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "object": [1, 2, 4, 14, 16, 20, 24], "initi": [1, 4], "batch": [1, 4, 6, 7], "parallel": [1, 24], "game": [1, 2, 24], "environ": [1, 4], "paramet": [1, 2, 4, 5, 6, 7, 14, 22, 24], "number": 1, "option": [1, 2, 14, 22], "side": 1, "length": [1, 22], "squar": 1, "board": [1, 13, 24], "default": [1, 2, 4, 14, 22, 24], "torch": [1, 2, 20, 24], "which": [1, 22], "tensor": [1, 2, 4, 13, 16, 18], "ar": [1, 2, 20, 22, 24], "alloc": [1, 4], "cpu": [1, 4, 24], "gener": 1, "mask": [1, 18], "indic": [1, 2], "valid": 1, "action": [1, 2, 4, 6, 7], "each": [1, 22], "return": [1, 2, 4, 6, 7, 14], "shape": [1, 22], "e": [1, 4, 22, 24], "b": 1, "1": [1, 2, 5, 13, 15, 20, 24], "0": [1, 5, 20, 24], "otherwis": 1, "type": [1, 2, 4, 6, 7, 14, 20], "encod": [1, 24], "current": [1, 22], "state": [1, 2, 4, 6, 7], "format": [1, 22], "suitabl": 1, "neural": 1, "network": 1, "input": [1, 4], "3": [1, 18, 24], "separ": [1, 22], "channel": 1, "player": [1, 2], "": [1, 4, 22], "stone": 1, "oppon": [1, 2], "last": 1, "move": 1, "check": 1, "specifi": [1, 24], "linearli": 1, "index": [1, 13, 20, 24], "boolean": 1, "env_indic": [1, 2], "all": [1, 18, 22], "env_mask": 1, "tupl": [1, 2, 20, 21], "perform": [1, 4, 18, 24], "updat": [1, 4, 6, 7, 12, 14, 16, 20], "provid": [1, 22], "If": [1, 22], "an": [1, 20, 24], "i": [1, 2, 14, 22, 24], "onli": [1, 24], "correspond": 1, "true": [1, 2, 18, 20, 24], "valu": [1, 4, 6, 7, 12, 14, 16, 20, 22], "1d": 1, "posit": 1, "place": 1, "one": [1, 18, 22], "per": 1, "select": 1, "should": [1, 18, 22, 24], "match": 1, "A": [1, 2, 4, 6, 7, 22], "contain": [1, 2, 4, 6, 7], "two": [1, 2, 22], "done_status": 1, "where": [1, 4], "end": [1, 2], "invalid_act": 1, "invalid": 1, "transfer": 1, "intern": 1, "The": [1, 2, 4, 22, 24], "target": 1, "instanc": [1, 18, 22], "its": [1, 14], "new": [1, 2, 22], "self": 1, "kernel_horizont": 1, "kernel_vert": 1, "kernel_diagon": 1, "determin": 1, "ani": [1, 21], "ha": 1, "been": 1, "won": 1, "win": [1, 2, 14], "sequenc": 1, "horizont": 1, "vertic": 1, "diagon": 1, "being": 1, "size": [1, 24], "empti": 1, "black": [1, 22], "white": [1, 22], "detect": 1, "kernel": 1, "5": [1, 24], "2": [1, 20, 24], "both": [1, 12, 20], "tensordict": [2, 4, 5, 6, 7, 13, 15, 17, 19, 20], "is_last": 2, "bool": [2, 9, 13, 18, 20, 21], "_summary_": 2, "observ": [2, 4, 6, 7], "action_mask": 2, "done": 2, "stat": 2, "fals": [2, 9, 13, 21], "take": [2, 18], "finish": 2, "flag": 2, "kept": 2, "properti": [2, 16, 21], "env_id": 2, "round": 2, "player_black": [2, 15], "callabl": [2, 15, 20], "player_whit": [2, 15], "out_devic": 2, "return_black_transit": 2, "return_white_transit": 2, "dict": [2, 4, 6, 7, 16, 17, 21, 23], "str": [2, 3, 5, 6, 7, 14, 17, 20, 22, 23], "float": [2, 5, 14, 16, 20], "tensordict_t_minus_1": 2, "tensordict_t": 2, "tensordict_t_plus_1": 2, "construct": 2, "transit": [2, 13], "dictionari": [2, 4, 6, 7, 22], "integr": 2, "from": [2, 4, 6, 7, 14, 22, 24], "three": 2, "consecut": 2, "time": 2, "t": [2, 16], "associ": 2, "inform": [2, 4, 6, 7], "repres": 2, "function": [2, 18, 20, 22], "calcul": 2, "reward": [2, 4, 6, 7], "statu": 2, "either": [2, 22], "result": 2, "structur": 2, "facilit": 2, "learn": [2, 3, 4, 6, 7, 24], "thi": [2, 18, 22], "reinforc": [2, 24], "algorithm": 2, "__call__": [3, 4], "load_state_dict": [3, 4, 6, 7], "state_dict": [3, 4, 6, 7], "train": [3, 4, 6, 7, 12, 20, 24], "name": [3, 14, 17, 20], "cfg": [3, 4, 5, 6, 7, 9, 10, 11, 17, 23, 24], "dictconfig": [3, 4, 5, 6, 7, 9, 10, 11, 17, 23], "action_spec": [3, 4, 5, 6, 7], "discretetensorspec": [3, 4, 6, 7], "observation_spec": [3, 4, 6, 7], "tensorspec": [3, 4, 5, 6, 7], "cuda": [3, 4, 6, 7, 20, 24], "checkpoint_path": 3, "abc": [4, 9, 13], "abstract": [4, 13], "defin": [4, 18], "comput": [4, 14, 18], "everi": [4, 18], "call": [4, 18, 22], "least": 4, "data": [4, 6, 7, 22], "output": [4, 24], "taken": 4, "configur": [4, 24], "specif": 4, "set": [4, 6, 7, 24], "space": 4, "g": [4, 22], "evalu": [4, 6, 7], "mode": [4, 6, 7, 24], "typic": [4, 6, 7], "includ": [4, 6, 7], "next": [4, 6, 7], "about": [4, 6, 7], "loss": [4, 6, 7], "load": [4, 6, 7, 24], "param": 5, "iter": 5, "optim": 5, "actor": [5, 24], "tensordictmodul": 5, "eps_init": 5, "eps_end": 5, "annealing_num_step": 5, "1000": 5, "buffer_s": 6, "run": [8, 9, 18], "disable_tqdm": 9, "inverse_map_board": [12, 13], "inverse_map_index": [12, 13], "map_board": [12, 13], "map_index": [12, 13], "addplay": [12, 14], "expected_scor": [12, 14], "forward": [12, 18, 22], "converg": [12, 20], "add_current_polici": [12, 20], "sampl": [12, 20, 21], "set_meta_polici": [12, 20], "set_oracle_mod": [12, 20], "black_vs_whit": [12, 20], "add": [12, 20], "fixed_behavioural_strategi": [12, 20], "make_behavioural_strategi": [12, 20], "ran_out": [12, 21], "k": [13, 14], "inplac": 13, "rate": 14, "1200": 14, "player_0": 14, "player_1": 14, "score": 14, "64": 14, "payoff": [14, 20, 22], "ndarrai": [14, 20, 22], "average_r": 14, "matrix": 14, "np": 14, "shpe": 14, "n": [14, 15, 20, 22, 24], "plai": [14, 24], "honor": 14, "king": 14, "so": 14, "estim": 14, "rating_0": 14, "rating_1": 14, "row_polici": 15, "list": [15, 20, 22], "col_polici": 15, "info": 16, "d": 17, "prefix": 17, "seed": 17, "residual_tow": 18, "out_featur": 18, "num_channel": 18, "32": 18, "x": [18, 22, 24], "overridden": 18, "subclass": 18, "although": 18, "recip": 18, "pass": 18, "need": 18, "within": [18, 24], "afterward": 18, "instead": 18, "sinc": 18, "former": 18, "care": 18, "regist": 18, "hook": 18, "while": 18, "latter": 18, "silent": 18, "ignor": 18, "them": [18, 24], "in_channel": 18, "num_residual_block": 18, "_policyhead": 18, "track_running_stat": 18, "model": [18, 24], "m": [18, 22], "max_siz": 20, "mean_threshold": 20, "99": 20, "std_threshold": 20, "005": 20, "min_iter_step": 20, "40": 20, "max_iter_step": 20, "300": 20, "meta_polici": 20, "enum": 20, "enumer": 20, "dir": 20, "initial_polici": 20, "_td": 20, "share": [20, 24], "_module_backup": 20, "s1": 20, "s2": 20, "same": 20, "strategi": 20, "population_0": 20, "population_1": 20, "old_payoff": 20, "drop_last": 21, "storag": 21, "im": 22, "valfmt": 22, "2f": 22, "textcolor": 22, "threshold": 22, "textkw": 22, "annot": 22, "axesimag": 22, "label": 22, "us": [22, 24], "imag": 22, "insid": 22, "string": 22, "method": 22, "matplotlib": 22, "ticker": 22, "formatt": 22, "pair": 22, "color": 22, "first": 22, "below": 22, "second": 22, "those": 22, "abov": 22, "unit": 22, "accord": 22, "appli": 22, "middl": 22, "colormap": 22, "kwarg": 22, "other": 22, "argument": 22, "text": 22, "creat": [22, 24], "row_label": 22, "col_label": 22, "ax": 22, "cbar_kw": 22, "cbarlabel": 22, "numpi": 22, "arrai": 22, "2d": 22, "row": 22, "column": 22, "plot": 22, "figur": 22, "colorbar": 22, "imshow": 22, "delim": 23, "flatten": 23, "recurs": 23, "open": 24, "project": 24, "agent": 24, "through": 24, "deep": 24, "previou": 24, "work": 24, "often": 24, "reli": 24, "variant": 24, "alphago": 24, "alphazero": 24, "ineffici": 24, "gpu": 24, "resourc": 24, "featur": 24, "simul": 24, "leverag": 24, "recent": 24, "advanc": 24, "marl": 24, "start": 24, "random": 24, "can": 24, "achiev": 24, "human": 24, "level": 24, "times15": 24, "hour": 24, "3090": 24, "follow": 24, "command": 24, "git": 24, "clone": 24, "github": 24, "com": 24, "hesic73": 24, "cd": 24, "conda": 24, "python": 24, "11": 24, "activ": 24, "pip": 24, "torchrl": 24, "lower": 24, "version": 24, "compat": 24, "well": 24, "hydra": 24, "hyperparamet": 24, "you": 24, "modifi": 24, "train_inrl": 24, "yaml": 24, "overrid": 24, "via": 24, "line": 24, "script": 24, "py": 24, "1024": 24, "epoch": 24, "3000": 24, "onlin": 24, "simpli": 24, "locat": 24, "save": 24, "checkpoint": 24, "file": 24, "tempfil": 24, "gettempdir": 24, "disabl": 24, "directori": 24, "run_dir": 24, "after": 24, "your": 24, "demo": 24, "pyqt5": 24, "grid_siz": 24, "56": 24, "piece_radiu": 24, "24": 24, "path": 24, "pretrain": 24, "avail": 24, "under": 24, "pretrained_model": 24, "15_15": 24, "Be": 24, "awar": 24, "wrong": 24, "lead": 24, "error": 24, "due": 24, "mismatch": 24, "ai": 24, "architectur": 24, "In": 24, "when": 24, "share_network": 24, "critic": 24, "could": 24, "modul": [24, 25], "At": 24, "present": 24, "cannot": 24, "without": 24, "packag": [24, 25], "search": 24, "page": 24, "subpackag": 25, "submodul": 25, "content": 25}, "objects": {"": [[0, 0, 0, "-", "gomoku_rl"]], "gomoku_rl": [[1, 0, 0, "-", "core"], [2, 0, 0, "-", "env"], [3, 0, 0, "-", "policy"], [8, 0, 0, "-", "runner"], [12, 0, 0, "-", "utils"]], "gomoku_rl.core": [[1, 1, 1, "", "Gomoku"], [1, 3, 1, "", "compute_done"]], "gomoku_rl.core.Gomoku": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "get_action_mask"], [1, 2, 1, "", "get_encoded_board"], [1, 2, 1, "", "is_valid"], [1, 2, 1, "", "reset"], [1, 2, 1, "", "step"], [1, 2, 1, "", "to"]], "gomoku_rl.env": [[2, 1, 1, "", "GomokuEnv"], [2, 3, 1, "", "make_transition"]], "gomoku_rl.env.GomokuEnv": [[2, 2, 1, "", "_step"], [2, 2, 1, "", "_step_and_maybe_reset"], [2, 4, 1, "", "batch_size"], [2, 4, 1, "", "board_size"], [2, 4, 1, "", "device"], [2, 4, 1, "", "num_envs"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "reset_rollout"], [2, 2, 1, "", "rollout"], [2, 2, 1, "", "rollout_fixed_opponent"], [2, 2, 1, "", "rollout_player_black"], [2, 2, 1, "", "rollout_player_white"], [2, 2, 1, "", "rollout_self_play"]], "gomoku_rl.policy": [[4, 0, 0, "-", "base"], [5, 0, 0, "-", "common"], [6, 0, 0, "-", "dqn"], [3, 3, 1, "", "get_policy"], [3, 3, 1, "", "get_pretrained_policy"], [7, 0, 0, "-", "ppo"]], "gomoku_rl.policy.base": [[4, 1, 1, "", "Policy"]], "gomoku_rl.policy.base.Policy": [[4, 2, 1, "", "__call__"], [4, 2, 1, "", "__init__"], [4, 2, 1, "", "eval"], [4, 2, 1, "", "learn"], [4, 2, 1, "", "load_state_dict"], [4, 2, 1, "", "state_dict"], [4, 2, 1, "", "train"]], "gomoku_rl.policy.common": [[5, 3, 1, "", "get_optimizer"], [5, 3, 1, "", "make_critic"], [5, 3, 1, "", "make_dataset_naive"], [5, 3, 1, "", "make_dqn_actor"], [5, 3, 1, "", "make_egreedy_actor"], [5, 3, 1, "", "make_ppo_ac"], [5, 3, 1, "", "make_ppo_actor"]], "gomoku_rl.policy.dqn": [[6, 1, 1, "", "DQNPolicy"], [6, 3, 1, "", "get_replay_buffer"]], "gomoku_rl.policy.dqn.DQNPolicy": [[6, 2, 1, "", "eval"], [6, 2, 1, "", "learn"], [6, 2, 1, "", "load_state_dict"], [6, 2, 1, "", "state_dict"], [6, 2, 1, "", "train"]], "gomoku_rl.policy.ppo": [[7, 1, 1, "", "PPOPolicy"]], "gomoku_rl.policy.ppo.PPOPolicy": [[7, 2, 1, "", "eval"], [7, 2, 1, "", "learn"], [7, 2, 1, "", "load_state_dict"], [7, 2, 1, "", "state_dict"], [7, 2, 1, "", "train"]], "gomoku_rl.runner": [[9, 0, 0, "-", "base"], [10, 0, 0, "-", "independent_rl_runner"], [11, 0, 0, "-", "psro_runner"]], "gomoku_rl.runner.base": [[9, 1, 1, "", "Runner"], [9, 1, 1, "", "SPRunner"]], "gomoku_rl.runner.base.Runner": [[9, 2, 1, "", "run"]], "gomoku_rl.runner.base.SPRunner": [[9, 2, 1, "", "run"]], "gomoku_rl.runner.independent_rl_runner": [[10, 1, 1, "", "IndependentRLRunner"], [10, 1, 1, "", "IndependentRLSPRunner"]], "gomoku_rl.runner.psro_runner": [[11, 1, 1, "", "PSRORunner"], [11, 1, 1, "", "PSROSPRunner"]], "gomoku_rl.utils": [[13, 0, 0, "-", "augment"], [14, 0, 0, "-", "elo"], [15, 0, 0, "-", "eval"], [16, 0, 0, "-", "log"], [17, 0, 0, "-", "misc"], [18, 0, 0, "-", "module"], [19, 0, 0, "-", "policy"], [20, 0, 0, "-", "psro"], [21, 0, 0, "-", "sampler"], [22, 0, 0, "-", "visual"], [23, 0, 0, "-", "wandb"]], "gomoku_rl.utils.augment": [[13, 1, 1, "", "AntiDiagonalFlip"], [13, 1, 1, "", "DiagonalFlip"], [13, 1, 1, "", "HorizontalFlip"], [13, 1, 1, "", "Identity"], [13, 1, 1, "", "Rotation"], [13, 1, 1, "", "Transform"], [13, 1, 1, "", "VerticalFlip"], [13, 3, 1, "", "augment_transition"], [13, 3, 1, "", "get_augmented_transition"]], "gomoku_rl.utils.augment.AntiDiagonalFlip": [[13, 2, 1, "", "inverse_map_board"], [13, 2, 1, "", "inverse_map_index"], [13, 2, 1, "", "map_board"], [13, 2, 1, "", "map_index"]], "gomoku_rl.utils.augment.DiagonalFlip": [[13, 2, 1, "", "inverse_map_board"], [13, 2, 1, "", "inverse_map_index"], [13, 2, 1, "", "map_board"], [13, 2, 1, "", "map_index"]], "gomoku_rl.utils.augment.HorizontalFlip": [[13, 2, 1, "", "inverse_map_board"], [13, 2, 1, "", "inverse_map_index"], [13, 2, 1, "", "map_board"], [13, 2, 1, "", "map_index"]], "gomoku_rl.utils.augment.Identity": [[13, 2, 1, "", "inverse_map_board"], [13, 2, 1, "", "inverse_map_index"], [13, 2, 1, "", "map_board"], [13, 2, 1, "", "map_index"]], "gomoku_rl.utils.augment.Rotation": [[13, 2, 1, "", "inverse_map_board"], [13, 2, 1, "", "inverse_map_index"], [13, 2, 1, "", "map_board"], [13, 2, 1, "", "map_index"]], "gomoku_rl.utils.augment.Transform": [[13, 2, 1, "", "inverse_map_board"], [13, 2, 1, "", "inverse_map_index"], [13, 2, 1, "", "map_board"], [13, 2, 1, "", "map_index"]], "gomoku_rl.utils.augment.VerticalFlip": [[13, 2, 1, "", "inverse_map_board"], [13, 2, 1, "", "inverse_map_index"], [13, 2, 1, "", "map_board"], [13, 2, 1, "", "map_index"]], "gomoku_rl.utils.elo": [[14, 1, 1, "", "Elo"], [14, 3, 1, "", "compute_elo_ratings"], [14, 3, 1, "", "compute_expected_score"]], "gomoku_rl.utils.elo.Elo": [[14, 2, 1, "", "addPlayer"], [14, 2, 1, "", "expected_score"], [14, 2, 1, "", "update"]], "gomoku_rl.utils.eval": [[15, 3, 1, "", "eval_win_rate"], [15, 3, 1, "", "get_payoff_matrix"]], "gomoku_rl.utils.log": [[16, 1, 1, "", "Mean"], [16, 3, 1, "", "get_log_func"]], "gomoku_rl.utils.log.Mean": [[16, 2, 1, "", "update"], [16, 4, 1, "", "value"]], "gomoku_rl.utils.misc": [[17, 3, 1, "", "add_prefix"], [17, 3, 1, "", "get_kwargs"], [17, 3, 1, "", "no_nan_in_tensordict"], [17, 3, 1, "", "set_seed"]], "gomoku_rl.utils.module": [[18, 1, 1, "", "ActorNet"], [18, 1, 1, "", "MyDuelingCnnDQNet"], [18, 1, 1, "", "PolicyHead"], [18, 1, 1, "", "ResidualBlock"], [18, 1, 1, "", "ResidualTower"], [18, 1, 1, "", "ValueHead"], [18, 1, 1, "", "ValueNet"], [18, 3, 1, "", "count_parameters"], [18, 3, 1, "", "init_params"]], "gomoku_rl.utils.module.ActorNet": [[18, 2, 1, "", "forward"]], "gomoku_rl.utils.module.MyDuelingCnnDQNet": [[18, 2, 1, "", "forward"]], "gomoku_rl.utils.module.PolicyHead": [[18, 2, 1, "", "forward"]], "gomoku_rl.utils.module.ResidualBlock": [[18, 2, 1, "", "forward"]], "gomoku_rl.utils.module.ResidualTower": [[18, 2, 1, "", "forward"]], "gomoku_rl.utils.module.ValueHead": [[18, 2, 1, "", "forward"]], "gomoku_rl.utils.module.ValueNet": [[18, 2, 1, "", "forward"]], "gomoku_rl.utils.policy": [[19, 3, 1, "", "uniform_policy"]], "gomoku_rl.utils.psro": [[20, 1, 1, "", "ConvergedIndicator"], [20, 1, 1, "", "PSROPolicyWrapper"], [20, 1, 1, "", "PayoffType"], [20, 1, 1, "", "Population"], [20, 3, 1, "", "calculate_jpc"], [20, 3, 1, "", "get_meta_solver"], [20, 3, 1, "", "get_new_payoffs"], [20, 3, 1, "", "get_new_payoffs_sp"], [20, 3, 1, "", "init_payoffs_sp"], [20, 3, 1, "", "print_payoffs"], [20, 3, 1, "", "solve_last_n"], [20, 3, 1, "", "solve_nash"], [20, 3, 1, "", "solve_uniform"]], "gomoku_rl.utils.psro.ConvergedIndicator": [[20, 2, 1, "", "converged"], [20, 2, 1, "", "reset"], [20, 2, 1, "", "update"]], "gomoku_rl.utils.psro.PSROPolicyWrapper": [[20, 2, 1, "", "add_current_policy"], [20, 2, 1, "", "eval"], [20, 2, 1, "", "sample"], [20, 2, 1, "", "set_meta_policy"], [20, 2, 1, "", "set_oracle_mode"], [20, 2, 1, "", "train"]], "gomoku_rl.utils.psro.PayoffType": [[20, 5, 1, "", "black_vs_white"], [20, 5, 1, "", "both"]], "gomoku_rl.utils.psro.Population": [[20, 2, 1, "", "add"], [20, 2, 1, "", "fixed_behavioural_strategy"], [20, 2, 1, "", "make_behavioural_strategy"], [20, 2, 1, "", "sample"]], "gomoku_rl.utils.sampler": [[21, 1, 1, "", "SequentialSampler"]], "gomoku_rl.utils.sampler.SequentialSampler": [[21, 4, 1, "", "ran_out"], [21, 2, 1, "", "sample"]], "gomoku_rl.utils.visual": [[22, 3, 1, "", "annotate_heatmap"], [22, 3, 1, "", "heatmap"], [22, 3, 1, "", "payoff_headmap"]], "gomoku_rl.utils.wandb": [[23, 3, 1, "", "dict_flatten"], [23, 3, 1, "", "init_wandb"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"gomoku_rl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "packag": [0, 3, 8, 12], "subpackag": 0, "submodul": [0, 3, 8, 12], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "content": [0, 3, 8, 12, 24], "core": 1, "env": 2, "polici": [3, 4, 5, 6, 7, 19], "base": [4, 9], "common": 5, "dqn": 6, "ppo": 7, "runner": [8, 9, 10, 11], "independent_rl_runn": 10, "psro_runn": 11, "util": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "augment": 13, "elo": 14, "eval": 15, "log": 16, "misc": 17, "psro": 20, "sampler": 21, "visual": 22, "wandb": 23, "welcom": 24, "": 24, "document": 24, "introduct": 24, "instal": 24, "usag": 24, "indic": 24, "tabl": 24}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"gomoku_rl package": [[0, "gomoku-rl-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [3, "submodules"], [8, "submodules"], [12, "submodules"]], "Module contents": [[0, "module-gomoku_rl"], [3, "module-gomoku_rl.policy"], [8, "module-gomoku_rl.runner"], [12, "module-gomoku_rl.utils"]], "gomoku_rl.core module": [[1, "module-gomoku_rl.core"]], "gomoku_rl.env module": [[2, "module-gomoku_rl.env"]], "gomoku_rl.policy package": [[3, "gomoku-rl-policy-package"]], "gomoku_rl.policy.base module": [[4, "module-gomoku_rl.policy.base"]], "gomoku_rl.policy.common module": [[5, "module-gomoku_rl.policy.common"]], "gomoku_rl.policy.dqn module": [[6, "module-gomoku_rl.policy.dqn"]], "gomoku_rl.policy.ppo module": [[7, "module-gomoku_rl.policy.ppo"]], "gomoku_rl.runner package": [[8, "gomoku-rl-runner-package"]], "gomoku_rl.runner.base module": [[9, "module-gomoku_rl.runner.base"]], "gomoku_rl.runner.independent_rl_runner module": [[10, "module-gomoku_rl.runner.independent_rl_runner"]], "gomoku_rl.runner.psro_runner module": [[11, "module-gomoku_rl.runner.psro_runner"]], "gomoku_rl.utils package": [[12, "gomoku-rl-utils-package"]], "gomoku_rl.utils.augment module": [[13, "module-gomoku_rl.utils.augment"]], "gomoku_rl.utils.elo module": [[14, "module-gomoku_rl.utils.elo"]], "gomoku_rl.utils.eval module": [[15, "module-gomoku_rl.utils.eval"]], "gomoku_rl.utils.log module": [[16, "module-gomoku_rl.utils.log"]], "gomoku_rl.utils.misc module": [[17, "module-gomoku_rl.utils.misc"]], "gomoku_rl.utils.module module": [[18, "module-gomoku_rl.utils.module"]], "gomoku_rl.utils.policy module": [[19, "module-gomoku_rl.utils.policy"]], "gomoku_rl.utils.psro module": [[20, "module-gomoku_rl.utils.psro"]], "gomoku_rl.utils.sampler module": [[21, "module-gomoku_rl.utils.sampler"]], "gomoku_rl.utils.visual module": [[22, "module-gomoku_rl.utils.visual"]], "gomoku_rl.utils.wandb module": [[23, "module-gomoku_rl.utils.wandb"]], "Welcome to gomoku_rl\u2019s documentation!": [[24, "welcome-to-gomoku-rl-s-documentation"]], "Introduction": [[24, "introduction"]], "Installation": [[24, "installation"]], "Usage": [[24, "usage"]], "Contents:": [[24, null]], "Indices and tables": [[24, "indices-and-tables"]], "gomoku_rl": [[25, "gomoku-rl"]]}, "indexentries": {"gomoku_rl": [[0, "module-gomoku_rl"]], "module": [[0, "module-gomoku_rl"], [1, "module-gomoku_rl.core"], [2, "module-gomoku_rl.env"], [3, "module-gomoku_rl.policy"], [4, "module-gomoku_rl.policy.base"], [5, "module-gomoku_rl.policy.common"], [6, "module-gomoku_rl.policy.dqn"], [7, "module-gomoku_rl.policy.ppo"], [8, "module-gomoku_rl.runner"], [9, "module-gomoku_rl.runner.base"], [10, "module-gomoku_rl.runner.independent_rl_runner"], [11, "module-gomoku_rl.runner.psro_runner"], [12, "module-gomoku_rl.utils"], [13, "module-gomoku_rl.utils.augment"], [14, "module-gomoku_rl.utils.elo"], [15, "module-gomoku_rl.utils.eval"], [16, "module-gomoku_rl.utils.log"], [17, "module-gomoku_rl.utils.misc"], [18, "module-gomoku_rl.utils.module"], [19, "module-gomoku_rl.utils.policy"], [20, "module-gomoku_rl.utils.psro"], [21, "module-gomoku_rl.utils.sampler"], [22, "module-gomoku_rl.utils.visual"], [23, "module-gomoku_rl.utils.wandb"]], "gomoku (class in gomoku_rl.core)": [[1, "gomoku_rl.core.Gomoku"]], "__init__() (gomoku_rl.core.gomoku method)": [[1, "gomoku_rl.core.Gomoku.__init__"]], "compute_done() (in module gomoku_rl.core)": [[1, "gomoku_rl.core.compute_done"]], "get_action_mask() (gomoku_rl.core.gomoku method)": [[1, "gomoku_rl.core.Gomoku.get_action_mask"]], "get_encoded_board() (gomoku_rl.core.gomoku method)": [[1, "gomoku_rl.core.Gomoku.get_encoded_board"]], "gomoku_rl.core": [[1, "module-gomoku_rl.core"]], "is_valid() (gomoku_rl.core.gomoku method)": [[1, "gomoku_rl.core.Gomoku.is_valid"]], "reset() (gomoku_rl.core.gomoku method)": [[1, "gomoku_rl.core.Gomoku.reset"]], "step() (gomoku_rl.core.gomoku method)": [[1, "gomoku_rl.core.Gomoku.step"]], "to() (gomoku_rl.core.gomoku method)": [[1, "gomoku_rl.core.Gomoku.to"]], "gomokuenv (class in gomoku_rl.env)": [[2, "gomoku_rl.env.GomokuEnv"]], "_step() (gomoku_rl.env.gomokuenv method)": [[2, "gomoku_rl.env.GomokuEnv._step"]], "_step_and_maybe_reset() (gomoku_rl.env.gomokuenv method)": [[2, "gomoku_rl.env.GomokuEnv._step_and_maybe_reset"]], "batch_size (gomoku_rl.env.gomokuenv property)": [[2, "gomoku_rl.env.GomokuEnv.batch_size"]], "board_size (gomoku_rl.env.gomokuenv property)": [[2, "gomoku_rl.env.GomokuEnv.board_size"]], "device (gomoku_rl.env.gomokuenv property)": [[2, "gomoku_rl.env.GomokuEnv.device"]], "gomoku_rl.env": [[2, "module-gomoku_rl.env"]], "make_transition() (in module gomoku_rl.env)": [[2, "gomoku_rl.env.make_transition"]], "num_envs (gomoku_rl.env.gomokuenv property)": [[2, "gomoku_rl.env.GomokuEnv.num_envs"]], "reset() (gomoku_rl.env.gomokuenv method)": [[2, "gomoku_rl.env.GomokuEnv.reset"]], "reset_rollout() (gomoku_rl.env.gomokuenv method)": [[2, "gomoku_rl.env.GomokuEnv.reset_rollout"]], "rollout() (gomoku_rl.env.gomokuenv method)": [[2, "gomoku_rl.env.GomokuEnv.rollout"]], "rollout_fixed_opponent() (gomoku_rl.env.gomokuenv method)": [[2, "gomoku_rl.env.GomokuEnv.rollout_fixed_opponent"]], "rollout_player_black() (gomoku_rl.env.gomokuenv method)": [[2, "gomoku_rl.env.GomokuEnv.rollout_player_black"]], "rollout_player_white() (gomoku_rl.env.gomokuenv method)": [[2, "gomoku_rl.env.GomokuEnv.rollout_player_white"]], "rollout_self_play() (gomoku_rl.env.gomokuenv method)": [[2, "gomoku_rl.env.GomokuEnv.rollout_self_play"]], "get_policy() (in module gomoku_rl.policy)": [[3, "gomoku_rl.policy.get_policy"]], "get_pretrained_policy() (in module gomoku_rl.policy)": [[3, "gomoku_rl.policy.get_pretrained_policy"]], "gomoku_rl.policy": [[3, "module-gomoku_rl.policy"]], "policy (class in gomoku_rl.policy.base)": [[4, "gomoku_rl.policy.base.Policy"]], "__call__() (gomoku_rl.policy.base.policy method)": [[4, "gomoku_rl.policy.base.Policy.__call__"]], "__init__() (gomoku_rl.policy.base.policy method)": [[4, "gomoku_rl.policy.base.Policy.__init__"]], "eval() (gomoku_rl.policy.base.policy method)": [[4, "gomoku_rl.policy.base.Policy.eval"]], "gomoku_rl.policy.base": [[4, "module-gomoku_rl.policy.base"]], "learn() (gomoku_rl.policy.base.policy method)": [[4, "gomoku_rl.policy.base.Policy.learn"]], "load_state_dict() (gomoku_rl.policy.base.policy method)": [[4, "gomoku_rl.policy.base.Policy.load_state_dict"]], "state_dict() (gomoku_rl.policy.base.policy method)": [[4, "gomoku_rl.policy.base.Policy.state_dict"]], "train() (gomoku_rl.policy.base.policy method)": [[4, "gomoku_rl.policy.base.Policy.train"]], "get_optimizer() (in module gomoku_rl.policy.common)": [[5, "gomoku_rl.policy.common.get_optimizer"]], "gomoku_rl.policy.common": [[5, "module-gomoku_rl.policy.common"]], "make_critic() (in module gomoku_rl.policy.common)": [[5, "gomoku_rl.policy.common.make_critic"]], "make_dataset_naive() (in module gomoku_rl.policy.common)": [[5, "gomoku_rl.policy.common.make_dataset_naive"]], "make_dqn_actor() (in module gomoku_rl.policy.common)": [[5, "gomoku_rl.policy.common.make_dqn_actor"]], "make_egreedy_actor() (in module gomoku_rl.policy.common)": [[5, "gomoku_rl.policy.common.make_egreedy_actor"]], "make_ppo_ac() (in module gomoku_rl.policy.common)": [[5, "gomoku_rl.policy.common.make_ppo_ac"]], "make_ppo_actor() (in module gomoku_rl.policy.common)": [[5, "gomoku_rl.policy.common.make_ppo_actor"]], "dqnpolicy (class in gomoku_rl.policy.dqn)": [[6, "gomoku_rl.policy.dqn.DQNPolicy"]], "eval() (gomoku_rl.policy.dqn.dqnpolicy method)": [[6, "gomoku_rl.policy.dqn.DQNPolicy.eval"]], "get_replay_buffer() (in module gomoku_rl.policy.dqn)": [[6, "gomoku_rl.policy.dqn.get_replay_buffer"]], "gomoku_rl.policy.dqn": [[6, "module-gomoku_rl.policy.dqn"]], "learn() (gomoku_rl.policy.dqn.dqnpolicy method)": [[6, "gomoku_rl.policy.dqn.DQNPolicy.learn"]], "load_state_dict() (gomoku_rl.policy.dqn.dqnpolicy method)": [[6, "gomoku_rl.policy.dqn.DQNPolicy.load_state_dict"]], "state_dict() (gomoku_rl.policy.dqn.dqnpolicy method)": [[6, "gomoku_rl.policy.dqn.DQNPolicy.state_dict"]], "train() (gomoku_rl.policy.dqn.dqnpolicy method)": [[6, "gomoku_rl.policy.dqn.DQNPolicy.train"]], "ppopolicy (class in gomoku_rl.policy.ppo)": [[7, "gomoku_rl.policy.ppo.PPOPolicy"]], "eval() (gomoku_rl.policy.ppo.ppopolicy method)": [[7, "gomoku_rl.policy.ppo.PPOPolicy.eval"]], "gomoku_rl.policy.ppo": [[7, "module-gomoku_rl.policy.ppo"]], "learn() (gomoku_rl.policy.ppo.ppopolicy method)": [[7, "gomoku_rl.policy.ppo.PPOPolicy.learn"]], "load_state_dict() (gomoku_rl.policy.ppo.ppopolicy method)": [[7, "gomoku_rl.policy.ppo.PPOPolicy.load_state_dict"]], "state_dict() (gomoku_rl.policy.ppo.ppopolicy method)": [[7, "gomoku_rl.policy.ppo.PPOPolicy.state_dict"]], "train() (gomoku_rl.policy.ppo.ppopolicy method)": [[7, "gomoku_rl.policy.ppo.PPOPolicy.train"]], "gomoku_rl.runner": [[8, "module-gomoku_rl.runner"]], "runner (class in gomoku_rl.runner.base)": [[9, "gomoku_rl.runner.base.Runner"]], "sprunner (class in gomoku_rl.runner.base)": [[9, "gomoku_rl.runner.base.SPRunner"]], "gomoku_rl.runner.base": [[9, "module-gomoku_rl.runner.base"]], "run() (gomoku_rl.runner.base.runner method)": [[9, "gomoku_rl.runner.base.Runner.run"]], "run() (gomoku_rl.runner.base.sprunner method)": [[9, "gomoku_rl.runner.base.SPRunner.run"]], "independentrlrunner (class in gomoku_rl.runner.independent_rl_runner)": [[10, "gomoku_rl.runner.independent_rl_runner.IndependentRLRunner"]], "independentrlsprunner (class in gomoku_rl.runner.independent_rl_runner)": [[10, "gomoku_rl.runner.independent_rl_runner.IndependentRLSPRunner"]], "gomoku_rl.runner.independent_rl_runner": [[10, "module-gomoku_rl.runner.independent_rl_runner"]], "psrorunner (class in gomoku_rl.runner.psro_runner)": [[11, "gomoku_rl.runner.psro_runner.PSRORunner"]], "psrosprunner (class in gomoku_rl.runner.psro_runner)": [[11, "gomoku_rl.runner.psro_runner.PSROSPRunner"]], "gomoku_rl.runner.psro_runner": [[11, "module-gomoku_rl.runner.psro_runner"]], "gomoku_rl.utils": [[12, "module-gomoku_rl.utils"]], "antidiagonalflip (class in gomoku_rl.utils.augment)": [[13, "gomoku_rl.utils.augment.AntiDiagonalFlip"]], "diagonalflip (class in gomoku_rl.utils.augment)": [[13, "gomoku_rl.utils.augment.DiagonalFlip"]], "horizontalflip (class in gomoku_rl.utils.augment)": [[13, "gomoku_rl.utils.augment.HorizontalFlip"]], "identity (class in gomoku_rl.utils.augment)": [[13, "gomoku_rl.utils.augment.Identity"]], "rotation (class in gomoku_rl.utils.augment)": [[13, "gomoku_rl.utils.augment.Rotation"]], "transform (class in gomoku_rl.utils.augment)": [[13, "gomoku_rl.utils.augment.Transform"]], "verticalflip (class in gomoku_rl.utils.augment)": [[13, "gomoku_rl.utils.augment.VerticalFlip"]], "augment_transition() (in module gomoku_rl.utils.augment)": [[13, "gomoku_rl.utils.augment.augment_transition"]], "get_augmented_transition() (in module gomoku_rl.utils.augment)": [[13, "gomoku_rl.utils.augment.get_augmented_transition"]], "gomoku_rl.utils.augment": [[13, "module-gomoku_rl.utils.augment"]], "inverse_map_board() (gomoku_rl.utils.augment.antidiagonalflip method)": [[13, "gomoku_rl.utils.augment.AntiDiagonalFlip.inverse_map_board"]], "inverse_map_board() (gomoku_rl.utils.augment.diagonalflip method)": [[13, "gomoku_rl.utils.augment.DiagonalFlip.inverse_map_board"]], "inverse_map_board() (gomoku_rl.utils.augment.horizontalflip method)": [[13, "gomoku_rl.utils.augment.HorizontalFlip.inverse_map_board"]], "inverse_map_board() (gomoku_rl.utils.augment.identity method)": [[13, "gomoku_rl.utils.augment.Identity.inverse_map_board"]], "inverse_map_board() (gomoku_rl.utils.augment.rotation method)": [[13, "gomoku_rl.utils.augment.Rotation.inverse_map_board"]], "inverse_map_board() (gomoku_rl.utils.augment.transform method)": [[13, "gomoku_rl.utils.augment.Transform.inverse_map_board"]], "inverse_map_board() (gomoku_rl.utils.augment.verticalflip method)": [[13, "gomoku_rl.utils.augment.VerticalFlip.inverse_map_board"]], "inverse_map_index() (gomoku_rl.utils.augment.antidiagonalflip method)": [[13, "gomoku_rl.utils.augment.AntiDiagonalFlip.inverse_map_index"]], "inverse_map_index() (gomoku_rl.utils.augment.diagonalflip method)": [[13, "gomoku_rl.utils.augment.DiagonalFlip.inverse_map_index"]], "inverse_map_index() (gomoku_rl.utils.augment.horizontalflip method)": [[13, "gomoku_rl.utils.augment.HorizontalFlip.inverse_map_index"]], "inverse_map_index() (gomoku_rl.utils.augment.identity method)": [[13, "gomoku_rl.utils.augment.Identity.inverse_map_index"]], "inverse_map_index() (gomoku_rl.utils.augment.rotation method)": [[13, "gomoku_rl.utils.augment.Rotation.inverse_map_index"]], "inverse_map_index() (gomoku_rl.utils.augment.transform method)": [[13, "gomoku_rl.utils.augment.Transform.inverse_map_index"]], "inverse_map_index() (gomoku_rl.utils.augment.verticalflip method)": [[13, "gomoku_rl.utils.augment.VerticalFlip.inverse_map_index"]], "map_board() (gomoku_rl.utils.augment.antidiagonalflip method)": [[13, "gomoku_rl.utils.augment.AntiDiagonalFlip.map_board"]], "map_board() (gomoku_rl.utils.augment.diagonalflip method)": [[13, "gomoku_rl.utils.augment.DiagonalFlip.map_board"]], "map_board() (gomoku_rl.utils.augment.horizontalflip method)": [[13, "gomoku_rl.utils.augment.HorizontalFlip.map_board"]], "map_board() (gomoku_rl.utils.augment.identity method)": [[13, "gomoku_rl.utils.augment.Identity.map_board"]], "map_board() (gomoku_rl.utils.augment.rotation method)": [[13, "gomoku_rl.utils.augment.Rotation.map_board"]], "map_board() (gomoku_rl.utils.augment.transform method)": [[13, "gomoku_rl.utils.augment.Transform.map_board"]], "map_board() (gomoku_rl.utils.augment.verticalflip method)": [[13, "gomoku_rl.utils.augment.VerticalFlip.map_board"]], "map_index() (gomoku_rl.utils.augment.antidiagonalflip method)": [[13, "gomoku_rl.utils.augment.AntiDiagonalFlip.map_index"]], "map_index() (gomoku_rl.utils.augment.diagonalflip method)": [[13, "gomoku_rl.utils.augment.DiagonalFlip.map_index"]], "map_index() (gomoku_rl.utils.augment.horizontalflip method)": [[13, "gomoku_rl.utils.augment.HorizontalFlip.map_index"]], "map_index() (gomoku_rl.utils.augment.identity method)": [[13, "gomoku_rl.utils.augment.Identity.map_index"]], "map_index() (gomoku_rl.utils.augment.rotation method)": [[13, "gomoku_rl.utils.augment.Rotation.map_index"]], "map_index() (gomoku_rl.utils.augment.transform method)": [[13, "gomoku_rl.utils.augment.Transform.map_index"]], "map_index() (gomoku_rl.utils.augment.verticalflip method)": [[13, "gomoku_rl.utils.augment.VerticalFlip.map_index"]], "elo (class in gomoku_rl.utils.elo)": [[14, "gomoku_rl.utils.elo.Elo"]], "addplayer() (gomoku_rl.utils.elo.elo method)": [[14, "gomoku_rl.utils.elo.Elo.addPlayer"]], "compute_elo_ratings() (in module gomoku_rl.utils.elo)": [[14, "gomoku_rl.utils.elo.compute_elo_ratings"]], "compute_expected_score() (in module gomoku_rl.utils.elo)": [[14, "gomoku_rl.utils.elo.compute_expected_score"]], "expected_score() (gomoku_rl.utils.elo.elo method)": [[14, "gomoku_rl.utils.elo.Elo.expected_score"]], "gomoku_rl.utils.elo": [[14, "module-gomoku_rl.utils.elo"]], "update() (gomoku_rl.utils.elo.elo method)": [[14, "gomoku_rl.utils.elo.Elo.update"]], "eval_win_rate() (in module gomoku_rl.utils.eval)": [[15, "gomoku_rl.utils.eval.eval_win_rate"]], "get_payoff_matrix() (in module gomoku_rl.utils.eval)": [[15, "gomoku_rl.utils.eval.get_payoff_matrix"]], "gomoku_rl.utils.eval": [[15, "module-gomoku_rl.utils.eval"]], "mean (class in gomoku_rl.utils.log)": [[16, "gomoku_rl.utils.log.Mean"]], "get_log_func() (in module gomoku_rl.utils.log)": [[16, "gomoku_rl.utils.log.get_log_func"]], "gomoku_rl.utils.log": [[16, "module-gomoku_rl.utils.log"]], "update() (gomoku_rl.utils.log.mean method)": [[16, "gomoku_rl.utils.log.Mean.update"]], "value (gomoku_rl.utils.log.mean property)": [[16, "gomoku_rl.utils.log.Mean.value"]], "add_prefix() (in module gomoku_rl.utils.misc)": [[17, "gomoku_rl.utils.misc.add_prefix"]], "get_kwargs() (in module gomoku_rl.utils.misc)": [[17, "gomoku_rl.utils.misc.get_kwargs"]], "gomoku_rl.utils.misc": [[17, "module-gomoku_rl.utils.misc"]], "no_nan_in_tensordict() (in module gomoku_rl.utils.misc)": [[17, "gomoku_rl.utils.misc.no_nan_in_tensordict"]], "set_seed() (in module gomoku_rl.utils.misc)": [[17, "gomoku_rl.utils.misc.set_seed"]], "actornet (class in gomoku_rl.utils.module)": [[18, "gomoku_rl.utils.module.ActorNet"]], "myduelingcnndqnet (class in gomoku_rl.utils.module)": [[18, "gomoku_rl.utils.module.MyDuelingCnnDQNet"]], "policyhead (class in gomoku_rl.utils.module)": [[18, "gomoku_rl.utils.module.PolicyHead"]], "residualblock (class in gomoku_rl.utils.module)": [[18, "gomoku_rl.utils.module.ResidualBlock"]], "residualtower (class in gomoku_rl.utils.module)": [[18, "gomoku_rl.utils.module.ResidualTower"]], "valuehead (class in gomoku_rl.utils.module)": [[18, "gomoku_rl.utils.module.ValueHead"]], "valuenet (class in gomoku_rl.utils.module)": [[18, "gomoku_rl.utils.module.ValueNet"]], "count_parameters() (in module gomoku_rl.utils.module)": [[18, "gomoku_rl.utils.module.count_parameters"]], "forward() (gomoku_rl.utils.module.actornet method)": [[18, "gomoku_rl.utils.module.ActorNet.forward"]], "forward() (gomoku_rl.utils.module.myduelingcnndqnet method)": [[18, "gomoku_rl.utils.module.MyDuelingCnnDQNet.forward"]], "forward() (gomoku_rl.utils.module.policyhead method)": [[18, "gomoku_rl.utils.module.PolicyHead.forward"]], "forward() (gomoku_rl.utils.module.residualblock method)": [[18, "gomoku_rl.utils.module.ResidualBlock.forward"]], "forward() (gomoku_rl.utils.module.residualtower method)": [[18, "gomoku_rl.utils.module.ResidualTower.forward"]], "forward() (gomoku_rl.utils.module.valuehead method)": [[18, "gomoku_rl.utils.module.ValueHead.forward"]], "forward() (gomoku_rl.utils.module.valuenet method)": [[18, "gomoku_rl.utils.module.ValueNet.forward"]], "gomoku_rl.utils.module": [[18, "module-gomoku_rl.utils.module"]], "init_params() (in module gomoku_rl.utils.module)": [[18, "gomoku_rl.utils.module.init_params"]], "gomoku_rl.utils.policy": [[19, "module-gomoku_rl.utils.policy"]], "uniform_policy() (in module gomoku_rl.utils.policy)": [[19, "gomoku_rl.utils.policy.uniform_policy"]], "convergedindicator (class in gomoku_rl.utils.psro)": [[20, "gomoku_rl.utils.psro.ConvergedIndicator"]], "psropolicywrapper (class in gomoku_rl.utils.psro)": [[20, "gomoku_rl.utils.psro.PSROPolicyWrapper"]], "payofftype (class in gomoku_rl.utils.psro)": [[20, "gomoku_rl.utils.psro.PayoffType"]], "population (class in gomoku_rl.utils.psro)": [[20, "gomoku_rl.utils.psro.Population"]], "add() (gomoku_rl.utils.psro.population method)": [[20, "gomoku_rl.utils.psro.Population.add"]], "add_current_policy() (gomoku_rl.utils.psro.psropolicywrapper method)": [[20, "gomoku_rl.utils.psro.PSROPolicyWrapper.add_current_policy"]], "black_vs_white (gomoku_rl.utils.psro.payofftype attribute)": [[20, "gomoku_rl.utils.psro.PayoffType.black_vs_white"]], "both (gomoku_rl.utils.psro.payofftype attribute)": [[20, "gomoku_rl.utils.psro.PayoffType.both"]], "calculate_jpc() (in module gomoku_rl.utils.psro)": [[20, "gomoku_rl.utils.psro.calculate_jpc"]], "converged() (gomoku_rl.utils.psro.convergedindicator method)": [[20, "gomoku_rl.utils.psro.ConvergedIndicator.converged"]], "eval() (gomoku_rl.utils.psro.psropolicywrapper method)": [[20, "gomoku_rl.utils.psro.PSROPolicyWrapper.eval"]], "fixed_behavioural_strategy() (gomoku_rl.utils.psro.population method)": [[20, "gomoku_rl.utils.psro.Population.fixed_behavioural_strategy"]], "get_meta_solver() (in module gomoku_rl.utils.psro)": [[20, "gomoku_rl.utils.psro.get_meta_solver"]], "get_new_payoffs() (in module gomoku_rl.utils.psro)": [[20, "gomoku_rl.utils.psro.get_new_payoffs"]], "get_new_payoffs_sp() (in module gomoku_rl.utils.psro)": [[20, "gomoku_rl.utils.psro.get_new_payoffs_sp"]], "gomoku_rl.utils.psro": [[20, "module-gomoku_rl.utils.psro"]], "init_payoffs_sp() (in module gomoku_rl.utils.psro)": [[20, "gomoku_rl.utils.psro.init_payoffs_sp"]], "make_behavioural_strategy() (gomoku_rl.utils.psro.population method)": [[20, "gomoku_rl.utils.psro.Population.make_behavioural_strategy"]], "print_payoffs() (in module gomoku_rl.utils.psro)": [[20, "gomoku_rl.utils.psro.print_payoffs"]], "reset() (gomoku_rl.utils.psro.convergedindicator method)": [[20, "gomoku_rl.utils.psro.ConvergedIndicator.reset"]], "sample() (gomoku_rl.utils.psro.psropolicywrapper method)": [[20, "gomoku_rl.utils.psro.PSROPolicyWrapper.sample"]], "sample() (gomoku_rl.utils.psro.population method)": [[20, "gomoku_rl.utils.psro.Population.sample"]], "set_meta_policy() (gomoku_rl.utils.psro.psropolicywrapper method)": [[20, "gomoku_rl.utils.psro.PSROPolicyWrapper.set_meta_policy"]], "set_oracle_mode() (gomoku_rl.utils.psro.psropolicywrapper method)": [[20, "gomoku_rl.utils.psro.PSROPolicyWrapper.set_oracle_mode"]], "solve_last_n() (in module gomoku_rl.utils.psro)": [[20, "gomoku_rl.utils.psro.solve_last_n"]], "solve_nash() (in module gomoku_rl.utils.psro)": [[20, "gomoku_rl.utils.psro.solve_nash"]], "solve_uniform() (in module gomoku_rl.utils.psro)": [[20, "gomoku_rl.utils.psro.solve_uniform"]], "train() (gomoku_rl.utils.psro.psropolicywrapper method)": [[20, "gomoku_rl.utils.psro.PSROPolicyWrapper.train"]], "update() (gomoku_rl.utils.psro.convergedindicator method)": [[20, "gomoku_rl.utils.psro.ConvergedIndicator.update"]], "sequentialsampler (class in gomoku_rl.utils.sampler)": [[21, "gomoku_rl.utils.sampler.SequentialSampler"]], "gomoku_rl.utils.sampler": [[21, "module-gomoku_rl.utils.sampler"]], "ran_out (gomoku_rl.utils.sampler.sequentialsampler property)": [[21, "gomoku_rl.utils.sampler.SequentialSampler.ran_out"]], "sample() (gomoku_rl.utils.sampler.sequentialsampler method)": [[21, "gomoku_rl.utils.sampler.SequentialSampler.sample"]], "annotate_heatmap() (in module gomoku_rl.utils.visual)": [[22, "gomoku_rl.utils.visual.annotate_heatmap"]], "gomoku_rl.utils.visual": [[22, "module-gomoku_rl.utils.visual"]], "heatmap() (in module gomoku_rl.utils.visual)": [[22, "gomoku_rl.utils.visual.heatmap"]], "payoff_headmap() (in module gomoku_rl.utils.visual)": [[22, "gomoku_rl.utils.visual.payoff_headmap"]], "dict_flatten() (in module gomoku_rl.utils.wandb)": [[23, "gomoku_rl.utils.wandb.dict_flatten"]], "gomoku_rl.utils.wandb": [[23, "module-gomoku_rl.utils.wandb"]], "init_wandb() (in module gomoku_rl.utils.wandb)": [[23, "gomoku_rl.utils.wandb.init_wandb"]]}})