Search.setIndex({"docnames": ["gomoku_rl", "gomoku_rl.collector", "gomoku_rl.core", "gomoku_rl.env", "gomoku_rl.policy", "gomoku_rl.policy.base", "gomoku_rl.policy.common", "gomoku_rl.policy.dqn", "gomoku_rl.policy.ppo", "gomoku_rl.runner", "gomoku_rl.runner.base", "gomoku_rl.runner.independent_rl_runner", "gomoku_rl.runner.psro_runner", "gomoku_rl.utils", "gomoku_rl.utils.augment", "gomoku_rl.utils.elo", "gomoku_rl.utils.eval", "gomoku_rl.utils.log", "gomoku_rl.utils.misc", "gomoku_rl.utils.module", "gomoku_rl.utils.policy", "gomoku_rl.utils.psro", "gomoku_rl.utils.sampler", "gomoku_rl.utils.test", "gomoku_rl.utils.visual", "gomoku_rl.utils.wandb", "index", "modules"], "filenames": ["gomoku_rl.rst", "gomoku_rl.collector.rst", "gomoku_rl.core.rst", "gomoku_rl.env.rst", "gomoku_rl.policy.rst", "gomoku_rl.policy.base.rst", "gomoku_rl.policy.common.rst", "gomoku_rl.policy.dqn.rst", "gomoku_rl.policy.ppo.rst", "gomoku_rl.runner.rst", "gomoku_rl.runner.base.rst", "gomoku_rl.runner.independent_rl_runner.rst", "gomoku_rl.runner.psro_runner.rst", "gomoku_rl.utils.rst", "gomoku_rl.utils.augment.rst", "gomoku_rl.utils.elo.rst", "gomoku_rl.utils.eval.rst", "gomoku_rl.utils.log.rst", "gomoku_rl.utils.misc.rst", "gomoku_rl.utils.module.rst", "gomoku_rl.utils.policy.rst", "gomoku_rl.utils.psro.rst", "gomoku_rl.utils.sampler.rst", "gomoku_rl.utils.test.rst", "gomoku_rl.utils.visual.rst", "gomoku_rl.utils.wandb.rst", "index.rst", "modules.rst"], "titles": ["gomoku_rl package", "gomoku_rl.collector module", "gomoku_rl.core module", "gomoku_rl.env module", "gomoku_rl.policy package", "gomoku_rl.policy.base module", "gomoku_rl.policy.common module", "gomoku_rl.policy.dqn module", "gomoku_rl.policy.ppo module", "gomoku_rl.runner package", "gomoku_rl.runner.base module", "gomoku_rl.runner.independent_rl_runner module", "gomoku_rl.runner.psro_runner module", "gomoku_rl.utils package", "gomoku_rl.utils.augment module", "gomoku_rl.utils.elo module", "gomoku_rl.utils.eval module", "gomoku_rl.utils.log module", "gomoku_rl.utils.misc module", "gomoku_rl.utils.module module", "gomoku_rl.utils.policy module", "gomoku_rl.utils.psro module", "gomoku_rl.utils.sampler module", "gomoku_rl.utils.test module", "gomoku_rl.utils.visual module", "gomoku_rl.utils.wandb module", "Welcome to gomoku_rl\u2019s documentation!", "gomoku_rl"], "terms": {"polici": [0, 1, 13, 21, 26, 27], "base": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 22, 23], "common": [0, 4], "get_optim": [0, 4, 6], "make_crit": [0, 4, 6], "make_dataset_na": [0, 4, 6], "make_dqn_actor": [0, 4, 6], "make_egreedy_actor": [0, 4, 6], "make_ppo_ac": [0, 4, 6], "make_ppo_actor": [0, 4, 6], "dqn": [0, 4, 5], "get_replay_buff": [0, 4, 7], "ppo": [0, 4, 5, 26], "get_polici": [0, 4], "get_pretrained_polici": [0, 4], "runner": [0, 26, 27], "sprunner": [0, 9, 10, 11, 12], "independent_rl_runn": [0, 9], "independentrlrunn": [0, 9, 11], "independentrlsprunn": [0, 9, 11], "psro_runn": [0, 9], "psrorunn": [0, 9, 12], "psrosprunn": [0, 9, 12], "util": [0, 26, 27], "augment": [0, 1, 13], "antidiagonalflip": [0, 13, 14], "diagonalflip": [0, 13, 14], "horizontalflip": [0, 13, 14], "ident": [0, 13, 14], "rotat": [0, 13, 14], "transform": [0, 13, 14], "verticalflip": [0, 13, 14], "augment_transit": [0, 13, 14], "get_augmented_transit": [0, 13, 14], "elo": [0, 13], "compute_elo_r": [0, 13, 15], "compute_expected_scor": [0, 13, 15], "eval": [0, 4, 5, 7, 8, 13, 21], "eval_win_r": [0, 13, 16], "get_payoff_matrix": [0, 13, 16], "log": [0, 13], "mean": [0, 13, 17], "get_log_func": [0, 13, 17], "misc": [0, 13], "add_prefix": [0, 13, 18], "get_kwarg": [0, 13, 18], "set_se": [0, 13, 18], "actornet": [0, 13, 19], "myduelingcnndqnet": [0, 13, 19], "policyhead": [0, 13, 19], "residualblock": [0, 13, 19], "residualtow": [0, 13, 19], "valuehead": [0, 13, 19], "valuenet": [0, 13, 19], "count_paramet": [0, 13, 19], "init_param": [0, 13, 19], "uniform_polici": [0, 13, 20, 21], "psro": [0, 13], "convergedind": [0, 13, 21], "psropolicywrapp": [0, 13, 21], "payofftyp": [0, 13, 21], "popul": [0, 13, 21], "calculate_jpc": [0, 13, 21], "get_meta_solv": [0, 13, 21], "get_new_payoff": [0, 13, 21], "get_new_payoffs_sp": [0, 13, 21], "init_payoffs_sp": [0, 13, 21], "print_payoff": [0, 13, 21], "solve_last_n": [0, 13, 21], "solve_nash": [0, 13, 21], "solve_uniform": [0, 13, 21], "sampler": [0, 7, 13], "sequentialsampl": [0, 13, 22], "test": [0, 13], "type": [0, 1, 2, 3, 4, 5, 7, 8, 13, 15, 21, 23], "assert_layer_transit": [0, 13, 23], "assert_observ": [0, 13, 23], "assert_tensor_1d_al": [0, 13, 23], "assert_transit": [0, 13, 23], "no_nan_in_tensordict": [0, 13, 23], "visual": [0, 13], "annotate_heatmap": [0, 13, 24], "heatmap": [0, 13, 24], "payoff_headmap": [0, 13, 24], "wandb": [0, 13, 26], "dict_flatten": [0, 13, 25], "init_wandb": [0, 13, 25], "collector": [0, 26, 27], "blackplaycollector": [0, 1, 26, 27], "__init__": [0, 1, 2, 3, 4, 5], "reset": [0, 1, 2, 3, 13, 21], "rollout": [0, 1], "selfplaycollector": [0, 1, 26, 27], "versusplaycollector": [0, 1, 26, 27], "whiteplaycollector": [0, 1, 26, 27], "make_transit": [0, 1, 26, 27], "round": [0, 1, 26, 27], "self_play_step": [0, 1, 26, 27], "core": [0, 26, 27], "gomoku": [0, 1, 2, 3, 26, 27], "get_action_mask": [0, 2], "get_encoded_board": [0, 2], "is_valid": [0, 2], "step": [0, 1, 2, 3, 5, 7, 8], "compute_don": [0, 2, 26, 27], "env": [0, 1, 16, 21, 26, 27], "gomokuenv": [0, 1, 3, 16, 26, 27], "batch_siz": [0, 3, 6, 7, 22], "board_siz": [0, 2, 3, 14, 26], "devic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 21, 26], "num_env": [0, 2, 3, 26], "set_post_step": [0, 3], "step_and_maybe_reset": [0, 3], "class": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 17, 19, 21, 22, 23], "policy_black": 1, "callabl": [1, 3, 16, 21], "tensordict": [1, 3, 5, 6, 7, 8, 14, 16, 20, 21, 23], "policy_whit": 1, "out_devic": 1, "none": [1, 2, 3, 6, 7, 8, 17, 19, 21, 24], "bool": [1, 10, 14, 19, 21, 22], "fals": [1, 10, 14, 22], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "initi": [1, 2, 3, 4, 5], "captur": 1, "game": [1, 2, 3, 26], "transit": [1, 14], "where": [1, 2, 4, 5], "black": [1, 2, 13, 23, 24], "player": [1, 2], "i": [1, 2, 3, 15, 24, 26], "control": 1, "trainabl": 1, "against": 1, "white": [1, 2, 13, 23, 24], "us": [1, 3, 24, 26], "fix": 1, "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 15, 24, 26], "The": [1, 2, 3, 4, 5, 24, 26], "environ": [1, 2, 3, 4, 5], "collect": 1, "take": [1, 3, 4, 19], "place": [1, 2], "_policy_t": 1, "simul": [1, 3, 26], "consist": 1, "oppon": [1, 2], "e": [1, 2, 3, 5, 24, 26], "g": [1, 3, 5, 24], "cpu": [1, 2, 3, 4, 5, 26], "gpu": [1, 3, 26], "data": [1, 5, 7, 8, 24], "store": 1, "default": [1, 2, 3, 4, 5, 15, 24, 26], "": [1, 2, 4, 5, 24], "specifi": [1, 2, 3, 4, 26], "option": [1, 2, 3, 15, 24], "whether": 1, "appli": [1, 24], "enhanc": 1, "dataset": 1, "divers": 1, "intern": [1, 2], "state": [1, 2, 3, 4, 5, 7, 8], "int": [1, 2, 3, 6, 7, 8, 14, 16, 19, 21, 22], "tupl": [1, 2, 21, 22], "dict": [1, 5, 7, 8, 17, 18, 22, 25], "execut": [1, 4], "session": 1, "over": 1, "number": [1, 2, 3], "focus": 1, "involv": 1, "total": 1, "thi": [1, 3, 19, 24], "adjust": 1, "ensur": 1, "an": [1, 2, 4, 21, 23, 26], "even": 1, "symmetri": 1, "turn": 1, "return": [1, 2, 3, 4, 5, 7, 8, 15], "A": [1, 2, 3, 5, 7, 8, 24], "contain": [1, 2, 3, 4, 5, 7, 8], "dictionari": [1, 3, 5, 7, 8, 24], "addit": 1, "inform": [1, 3, 5, 7, 8], "frame": 1, "per": [1, 2], "second": [1, 24], "fp": 1, "achiev": [1, 26], "dure": 1, "abc": [1, 5, 10, 14], "abstract": [1, 5, 14], "self": [1, 2], "plai": [1, 15, 26], "facilit": 1, "gener": [1, 2, 6], "through": [1, 26], "both": [1, 2, 13, 21], "same": [1, 21], "conduct": 1, "function": [1, 3, 19, 21, 24], "which": [1, 2, 3, 4, 24], "If": [1, 2, 3, 24], "true": [1, 2, 3, 19, 21, 26], "two": [1, 2, 24], "element": 1, "hold": 1, "from": [1, 4, 5, 7, 8, 15, 24, 26], "each": [1, 2, 3, 24], "includ": [1, 3, 5, 7, 8], "befor": 1, "action": [1, 2, 3, 4, 5, 7, 8], "taken": [1, 3, 5], "result": 1, "about": [1, 5, 7, 8], "versu": 1, "distinct": 1, "compet": 1, "other": [1, 3, 4, 24], "altern": 1, "between": 1, "It": 1, "equal": 1, "three": 1, "repres": [1, 3], "structur": 1, "similarli": 1, "note": 1, "first": [1, 24], "doe": 1, "so": [1, 15], "start": [1, 26], "perspect": 1, "who": 1, "provid": [1, 2, 3, 4, 24], "challeng": 1, "indic": [1, 2, 3], "perform": [1, 2, 3, 4, 5, 19, 26], "activ": [1, 26], "fair": 1, "gameplai": 1, "tensordict_t_minus_1": 1, "tensordict_t": 1, "tensordict_t_plus_1": 1, "construct": 1, "tensor": [1, 2, 3, 5, 14, 17, 19, 23], "integr": 1, "consecut": 1, "time": 1, "t": [1, 17, 23], "1": [1, 2, 6, 14, 16, 21, 23, 26], "associ": 1, "new": [1, 2, 3, 24], "calcul": 1, "reward": [1, 5, 7, 8], "win": [1, 2, 15], "statu": 1, "flag": [1, 3], "done": [1, 3, 23], "end": [1, 2, 3], "either": [1, 24], "learn": [1, 4, 5, 7, 8, 26], "reinforc": [1, 26], "algorithm": 1, "return_black_transit": 1, "return_white_transit": 1, "sequenti": 1, "instanc": [1, 2, 3, 4, 19, 24], "determin": [1, 2], "current": [1, 2, 3, 24], "similar": 1, "request": [1, 4], "after": [1, 3, 26], "2": [1, 2, 21, 23, 26], "won": [1, 2], "make": 1, "move": [1, 2], "differ": 1, "behavior": 1, "affect": 1, "valid": [1, 2], "mark": 1, "invalid": [1, 2], "singl": [1, 3], "next": [1, 5, 7, 8], "unchang": 1, "input": [1, 2, 3, 5], "potenti": 1, "chain": 1, "updat": [1, 2, 3, 5, 7, 8, 13, 15, 17, 21], "reflect": [1, 3], "conclud": [1, 3], "15": [2, 21, 26], "object": [2, 3, 4, 5, 15, 17, 21, 26], "batch": [2, 5, 7, 8], "parallel": [2, 3, 26], "side": 2, "length": [2, 24], "squar": [2, 3], "board": [2, 3, 14, 26], "torch": [2, 3, 21, 26], "ar": [2, 3, 21, 24, 26], "alloc": [2, 5], "mask": [2, 3, 19], "shape": [2, 4, 24], "b": 2, "0": [2, 6, 21, 26], "otherwis": 2, "encod": [2, 26], "format": [2, 24], "suitabl": 2, "neural": 2, "network": 2, "3": [2, 19, 23, 26], "separ": [2, 3, 24], "channel": 2, "stone": 2, "last": 2, "check": 2, "linearli": 2, "index": [2, 14, 21], "boolean": 2, "env_indic": [2, 3], "all": [2, 3, 19, 24], "env_mask": [2, 3], "onli": [2, 26], "correspond": [2, 4], "valu": [2, 5, 7, 8, 13, 15, 17, 21, 23, 24], "1d": [2, 3], "posit": 2, "one": [2, 3, 19, 24], "select": 2, "should": [2, 3, 4, 19, 24, 26], "match": [2, 4], "done_status": 2, "invalid_act": 2, "transfer": 2, "target": 2, "its": [2, 15], "kernel_horizont": 2, "kernel_vert": 2, "kernel_diagon": 2, "ani": [2, 22], "ha": 2, "been": 2, "sequenc": 2, "horizont": 2, "vertic": 2, "diagon": 2, "being": 2, "size": [2, 3, 26], "empti": 2, "detect": 2, "kernel": 2, "5": [2, 26], "independ": 3, "run": [3, 9, 10, 19], "comput": [3, 4, 5, 15, 19], "properti": [3, 17, 22], "observ": [3, 4, 5, 7, 8, 23], "post_step": 3, "set": [3, 4, 5, 7, 8, 26], "call": [3, 5, 19, 24], "some": 3, "advanc": [3, 26], "timestep": 3, "mai": 3, "also": 3, "output": [3, 5, 26], "relev": 3, "For": 3, "have": 3, "kei": [3, 4], "remain": 3, "previou": [3, 26], "within": [3, 19, 26], "registri": [4, 5], "__call__": [4, 5], "load_state_dict": [4, 5, 7, 8], "state_dict": [4, 5, 7, 8], "train": [4, 5, 7, 8, 13, 21, 26], "name": [4, 15, 18, 21], "str": [4, 5, 6, 7, 8, 15, 18, 21, 24, 25], "cfg": [4, 5, 6, 7, 8, 10, 11, 12, 18, 25, 26], "dictconfig": [4, 5, 6, 7, 8, 10, 11, 12, 18, 25], "action_spec": [4, 5, 6, 7, 8], "discretetensorspec": [4, 5, 7, 8], "observation_spec": [4, 5, 7, 8], "tensorspec": [4, 5, 6, 7, 8], "cuda": [4, 5, 7, 8, 21, 26], "retriev": 4, "configur": [4, 5, 26], "specif": [4, 5], "typic": [4, 5, 7, 8], "hyperparamet": [4, 26], "space": [4, 5], "defin": [4, 5, 19], "bound": 4, "can": [4, 26], "receiv": 4, "checkpoint_path": 4, "pretrain": [4, 26], "checkpoint": [4, 26], "path": [4, 26], "load": [4, 5, 7, 8, 26], "detail": 4, "file": [4, 26], "save": [4, 26], "model": [4, 19, 26], "weight": 4, "given": 4, "everi": [5, 19], "least": 5, "evalu": [5, 7, 8], "mode": [5, 7, 8, 26], "loss": [5, 7, 8], "param": 6, "iter": 6, "optim": 6, "actor": [6, 26], "tensordictmodul": 6, "eps_init": 6, "float": [6, 15, 17, 21], "eps_end": 6, "annealing_num_step": 6, "1000": 6, "buffer_s": 7, "disable_tqdm": 10, "inverse_map_board": [13, 14], "inverse_map_index": [13, 14], "map_board": [13, 14], "map_index": [13, 14], "addplay": [13, 15], "expected_scor": [13, 15], "forward": [13, 19, 24], "converg": [13, 21], "add_current_polici": [13, 21], "sampl": [13, 21, 22], "set_meta_polici": [13, 21], "set_oracle_mod": [13, 21], "black_vs_whit": [13, 21], "add": [13, 21], "fixed_behavioural_strategi": [13, 21], "make_behavioural_strategi": [13, 21], "ran_out": [13, 22], "mix": [13, 23], "k": [14, 15], "inplac": 14, "rate": 15, "1200": 15, "player_0": 15, "player_1": 15, "score": 15, "64": 15, "payoff": [15, 21, 24], "ndarrai": [15, 21, 24], "average_r": 15, "matrix": 15, "np": 15, "shpe": 15, "n": [15, 16, 21, 24, 26], "honor": 15, "king": 15, "estim": 15, "rating_0": 15, "rating_1": 15, "player_black": 16, "player_whit": 16, "row_polici": 16, "list": [16, 21, 24], "col_polici": 16, "info": 17, "d": 18, "prefix": 18, "seed": 18, "residual_tow": 19, "out_featur": 19, "num_channel": 19, "32": 19, "x": [19, 24, 26], "overridden": 19, "subclass": 19, "although": 19, "recip": 19, "pass": 19, "need": 19, "afterward": 19, "instead": 19, "sinc": 19, "former": 19, "care": 19, "regist": 19, "hook": 19, "while": 19, "latter": 19, "silent": 19, "ignor": 19, "them": [19, 26], "in_channel": 19, "num_residual_block": 19, "_policyhead": 19, "track_running_stat": 19, "m": [19, 24], "max_siz": 21, "mean_threshold": 21, "99": 21, "std_threshold": 21, "005": 21, "min_iter_step": 21, "40": 21, "max_iter_step": 21, "300": 21, "meta_polici": 21, "enum": [21, 23], "enumer": [21, 23], "dir": 21, "initial_polici": 21, "_td": 21, "share": [21, 26], "_module_backup": 21, "s1": 21, "s2": 21, "strategi": 21, "population_0": 21, "population_1": 21, "old_payoff": 21, "drop_last": 22, "storag": 22, "layer": 23, "next_lay": 23, "im": 24, "valfmt": 24, "2f": 24, "textcolor": 24, "threshold": 24, "textkw": 24, "annot": 24, "axesimag": 24, "label": 24, "imag": 24, "insid": 24, "string": 24, "method": 24, "matplotlib": 24, "ticker": 24, "formatt": 24, "pair": 24, "color": 24, "below": 24, "those": 24, "abov": 24, "unit": 24, "accord": 24, "middl": 24, "colormap": 24, "kwarg": 24, "argument": 24, "text": 24, "creat": [24, 26], "row_label": 24, "col_label": 24, "ax": 24, "cbar_kw": 24, "cbarlabel": 24, "numpi": 24, "arrai": 24, "2d": 24, "row": 24, "column": 24, "plot": 24, "figur": 24, "colorbar": 24, "imshow": 24, "delim": 25, "flatten": 25, "recurs": 25, "open": 26, "project": 26, "agent": 26, "deep": 26, "work": 26, "often": 26, "reli": 26, "variant": 26, "alphago": 26, "alphazero": 26, "ineffici": 26, "resourc": 26, "featur": 26, "leverag": 26, "recent": 26, "marl": 26, "random": 26, "human": 26, "level": 26, "times15": 26, "hour": 26, "3090": 26, "follow": 26, "command": 26, "git": 26, "clone": 26, "github": 26, "com": 26, "hesic73": 26, "cd": 26, "conda": 26, "python": 26, "11": 26, "pip": 26, "torchrl": 26, "lower": 26, "version": 26, "compat": 26, "well": 26, "hydra": 26, "you": 26, "modifi": 26, "train_inrl": 26, "yaml": 26, "overrid": 26, "via": 26, "line": 26, "script": 26, "py": 26, "1024": 26, "epoch": 26, "3000": 26, "onlin": 26, "simpli": 26, "locat": 26, "tempfil": 26, "gettempdir": 26, "disabl": 26, "directori": 26, "run_dir": 26, "your": 26, "demo": 26, "pyqt5": 26, "grid_siz": 26, "56": 26, "piece_radiu": 26, "24": 26, "avail": 26, "under": 26, "pretrained_model": 26, "15_15": 26, "Be": 26, "awar": 26, "wrong": 26, "lead": 26, "error": 26, "due": 26, "mismatch": 26, "ai": 26, "architectur": 26, "In": 26, "when": 26, "share_network": 26, "critic": 26, "could": 26, "modul": [26, 27], "At": 26, "present": 26, "cannot": 26, "without": 26, "packag": [26, 27], "subpackag": [26, 27], "submodul": [26, 27], "content": 27}, "objects": {"": [[0, 0, 0, "-", "gomoku_rl"]], "gomoku_rl": [[1, 0, 0, "-", "collector"], [2, 0, 0, "-", "core"], [3, 0, 0, "-", "env"], [4, 0, 0, "-", "policy"], [9, 0, 0, "-", "runner"], [13, 0, 0, "-", "utils"]], "gomoku_rl.collector": [[1, 1, 1, "", "BlackPlayCollector"], [1, 1, 1, "", "Collector"], [1, 1, 1, "", "SelfPlayCollector"], [1, 1, 1, "", "VersusPlayCollector"], [1, 1, 1, "", "WhitePlayCollector"], [1, 3, 1, "", "make_transition"], [1, 3, 1, "", "round"], [1, 3, 1, "", "self_play_step"]], "gomoku_rl.collector.BlackPlayCollector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "reset"], [1, 2, 1, "", "rollout"]], "gomoku_rl.collector.Collector": [[1, 2, 1, "", "reset"], [1, 2, 1, "", "rollout"]], "gomoku_rl.collector.SelfPlayCollector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "reset"], [1, 2, 1, "", "rollout"]], "gomoku_rl.collector.VersusPlayCollector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "reset"], [1, 2, 1, "", "rollout"]], "gomoku_rl.collector.WhitePlayCollector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "reset"], [1, 2, 1, "", "rollout"]], "gomoku_rl.core": [[2, 1, 1, "", "Gomoku"], [2, 3, 1, "", "compute_done"]], "gomoku_rl.core.Gomoku": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "get_action_mask"], [2, 2, 1, "", "get_encoded_board"], [2, 2, 1, "", "is_valid"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "step"], [2, 2, 1, "", "to"]], "gomoku_rl.env": [[3, 1, 1, "", "GomokuEnv"]], "gomoku_rl.env.GomokuEnv": [[3, 2, 1, "", "__init__"], [3, 4, 1, "", "batch_size"], [3, 4, 1, "", "board_size"], [3, 4, 1, "", "device"], [3, 4, 1, "", "num_envs"], [3, 2, 1, "", "reset"], [3, 2, 1, "", "set_post_step"], [3, 2, 1, "", "step"], [3, 2, 1, "", "step_and_maybe_reset"]], "gomoku_rl.policy": [[5, 0, 0, "-", "base"], [6, 0, 0, "-", "common"], [7, 0, 0, "-", "dqn"], [4, 3, 1, "", "get_policy"], [4, 3, 1, "", "get_pretrained_policy"], [8, 0, 0, "-", "ppo"]], "gomoku_rl.policy.base": [[5, 1, 1, "", "Policy"]], "gomoku_rl.policy.base.Policy": [[5, 5, 1, "", "REGISTRY"], [5, 2, 1, "", "__call__"], [5, 2, 1, "", "__init__"], [5, 2, 1, "", "eval"], [5, 2, 1, "", "learn"], [5, 2, 1, "", "load_state_dict"], [5, 2, 1, "", "state_dict"], [5, 2, 1, "", "train"]], "gomoku_rl.policy.common": [[6, 3, 1, "", "get_optimizer"], [6, 3, 1, "", "make_critic"], [6, 3, 1, "", "make_dataset_naive"], [6, 3, 1, "", "make_dqn_actor"], [6, 3, 1, "", "make_egreedy_actor"], [6, 3, 1, "", "make_ppo_ac"], [6, 3, 1, "", "make_ppo_actor"]], "gomoku_rl.policy.dqn": [[7, 1, 1, "", "DQN"], [7, 3, 1, "", "get_replay_buffer"]], "gomoku_rl.policy.dqn.DQN": [[7, 2, 1, "", "eval"], [7, 2, 1, "", "learn"], [7, 2, 1, "", "load_state_dict"], [7, 2, 1, "", "state_dict"], [7, 2, 1, "", "train"]], "gomoku_rl.policy.ppo": [[8, 1, 1, "", "PPO"]], "gomoku_rl.policy.ppo.PPO": [[8, 2, 1, "", "eval"], [8, 2, 1, "", "learn"], [8, 2, 1, "", "load_state_dict"], [8, 2, 1, "", "state_dict"], [8, 2, 1, "", "train"]], "gomoku_rl.runner": [[10, 0, 0, "-", "base"], [11, 0, 0, "-", "independent_rl_runner"], [12, 0, 0, "-", "psro_runner"]], "gomoku_rl.runner.base": [[10, 1, 1, "", "Runner"], [10, 1, 1, "", "SPRunner"]], "gomoku_rl.runner.base.Runner": [[10, 2, 1, "", "run"]], "gomoku_rl.runner.base.SPRunner": [[10, 2, 1, "", "run"]], "gomoku_rl.runner.independent_rl_runner": [[11, 1, 1, "", "IndependentRLRunner"], [11, 1, 1, "", "IndependentRLSPRunner"]], "gomoku_rl.runner.psro_runner": [[12, 1, 1, "", "PSRORunner"], [12, 1, 1, "", "PSROSPRunner"]], "gomoku_rl.utils": [[14, 0, 0, "-", "augment"], [15, 0, 0, "-", "elo"], [16, 0, 0, "-", "eval"], [17, 0, 0, "-", "log"], [18, 0, 0, "-", "misc"], [19, 0, 0, "-", "module"], [20, 0, 0, "-", "policy"], [21, 0, 0, "-", "psro"], [22, 0, 0, "-", "sampler"], [23, 0, 0, "-", "test"], [24, 0, 0, "-", "visual"], [25, 0, 0, "-", "wandb"]], "gomoku_rl.utils.augment": [[14, 1, 1, "", "AntiDiagonalFlip"], [14, 1, 1, "", "DiagonalFlip"], [14, 1, 1, "", "HorizontalFlip"], [14, 1, 1, "", "Identity"], [14, 1, 1, "", "Rotation"], [14, 1, 1, "", "Transform"], [14, 1, 1, "", "VerticalFlip"], [14, 3, 1, "", "augment_transition"], [14, 3, 1, "", "get_augmented_transition"]], "gomoku_rl.utils.augment.AntiDiagonalFlip": [[14, 2, 1, "", "inverse_map_board"], [14, 2, 1, "", "inverse_map_index"], [14, 2, 1, "", "map_board"], [14, 2, 1, "", "map_index"]], "gomoku_rl.utils.augment.DiagonalFlip": [[14, 2, 1, "", "inverse_map_board"], [14, 2, 1, "", "inverse_map_index"], [14, 2, 1, "", "map_board"], [14, 2, 1, "", "map_index"]], "gomoku_rl.utils.augment.HorizontalFlip": [[14, 2, 1, "", "inverse_map_board"], [14, 2, 1, "", "inverse_map_index"], [14, 2, 1, "", "map_board"], [14, 2, 1, "", "map_index"]], "gomoku_rl.utils.augment.Identity": [[14, 2, 1, "", "inverse_map_board"], [14, 2, 1, "", "inverse_map_index"], [14, 2, 1, "", "map_board"], [14, 2, 1, "", "map_index"]], "gomoku_rl.utils.augment.Rotation": [[14, 2, 1, "", "inverse_map_board"], [14, 2, 1, "", "inverse_map_index"], [14, 2, 1, "", "map_board"], [14, 2, 1, "", "map_index"]], "gomoku_rl.utils.augment.Transform": [[14, 2, 1, "", "inverse_map_board"], [14, 2, 1, "", "inverse_map_index"], [14, 2, 1, "", "map_board"], [14, 2, 1, "", "map_index"]], "gomoku_rl.utils.augment.VerticalFlip": [[14, 2, 1, "", "inverse_map_board"], [14, 2, 1, "", "inverse_map_index"], [14, 2, 1, "", "map_board"], [14, 2, 1, "", "map_index"]], "gomoku_rl.utils.elo": [[15, 1, 1, "", "Elo"], [15, 3, 1, "", "compute_elo_ratings"], [15, 3, 1, "", "compute_expected_score"]], "gomoku_rl.utils.elo.Elo": [[15, 2, 1, "", "addPlayer"], [15, 2, 1, "", "expected_score"], [15, 2, 1, "", "update"]], "gomoku_rl.utils.eval": [[16, 3, 1, "", "eval_win_rate"], [16, 3, 1, "", "get_payoff_matrix"]], "gomoku_rl.utils.log": [[17, 1, 1, "", "Mean"], [17, 3, 1, "", "get_log_func"]], "gomoku_rl.utils.log.Mean": [[17, 2, 1, "", "update"], [17, 4, 1, "", "value"]], "gomoku_rl.utils.misc": [[18, 3, 1, "", "add_prefix"], [18, 3, 1, "", "get_kwargs"], [18, 3, 1, "", "set_seed"]], "gomoku_rl.utils.module": [[19, 1, 1, "", "ActorNet"], [19, 1, 1, "", "MyDuelingCnnDQNet"], [19, 1, 1, "", "PolicyHead"], [19, 1, 1, "", "ResidualBlock"], [19, 1, 1, "", "ResidualTower"], [19, 1, 1, "", "ValueHead"], [19, 1, 1, "", "ValueNet"], [19, 3, 1, "", "count_parameters"], [19, 3, 1, "", "init_params"]], "gomoku_rl.utils.module.ActorNet": [[19, 2, 1, "", "forward"]], "gomoku_rl.utils.module.MyDuelingCnnDQNet": [[19, 2, 1, "", "forward"]], "gomoku_rl.utils.module.PolicyHead": [[19, 2, 1, "", "forward"]], "gomoku_rl.utils.module.ResidualBlock": [[19, 2, 1, "", "forward"]], "gomoku_rl.utils.module.ResidualTower": [[19, 2, 1, "", "forward"]], "gomoku_rl.utils.module.ValueHead": [[19, 2, 1, "", "forward"]], "gomoku_rl.utils.module.ValueNet": [[19, 2, 1, "", "forward"]], "gomoku_rl.utils.policy": [[20, 3, 1, "", "uniform_policy"]], "gomoku_rl.utils.psro": [[21, 1, 1, "", "ConvergedIndicator"], [21, 1, 1, "", "PSROPolicyWrapper"], [21, 1, 1, "", "PayoffType"], [21, 1, 1, "", "Population"], [21, 3, 1, "", "calculate_jpc"], [21, 3, 1, "", "get_meta_solver"], [21, 3, 1, "", "get_new_payoffs"], [21, 3, 1, "", "get_new_payoffs_sp"], [21, 3, 1, "", "init_payoffs_sp"], [21, 3, 1, "", "print_payoffs"], [21, 3, 1, "", "solve_last_n"], [21, 3, 1, "", "solve_nash"], [21, 3, 1, "", "solve_uniform"]], "gomoku_rl.utils.psro.ConvergedIndicator": [[21, 2, 1, "", "converged"], [21, 2, 1, "", "reset"], [21, 2, 1, "", "update"]], "gomoku_rl.utils.psro.PSROPolicyWrapper": [[21, 2, 1, "", "add_current_policy"], [21, 2, 1, "", "eval"], [21, 2, 1, "", "sample"], [21, 2, 1, "", "set_meta_policy"], [21, 2, 1, "", "set_oracle_mode"], [21, 2, 1, "", "train"]], "gomoku_rl.utils.psro.PayoffType": [[21, 5, 1, "", "black_vs_white"], [21, 5, 1, "", "both"]], "gomoku_rl.utils.psro.Population": [[21, 2, 1, "", "add"], [21, 2, 1, "", "fixed_behavioural_strategy"], [21, 2, 1, "", "make_behavioural_strategy"], [21, 2, 1, "", "sample"]], "gomoku_rl.utils.sampler": [[22, 1, 1, "", "SequentialSampler"]], "gomoku_rl.utils.sampler.SequentialSampler": [[22, 4, 1, "", "ran_out"], [22, 2, 1, "", "sample"]], "gomoku_rl.utils.test": [[23, 1, 1, "", "Type"], [23, 3, 1, "", "assert_layer_transition"], [23, 3, 1, "", "assert_observation"], [23, 3, 1, "", "assert_tensor_1d_all"], [23, 3, 1, "", "assert_transition"], [23, 3, 1, "", "no_nan_in_tensordict"]], "gomoku_rl.utils.test.Type": [[23, 5, 1, "", "black"], [23, 5, 1, "", "mixed"], [23, 5, 1, "", "white"]], "gomoku_rl.utils.visual": [[24, 3, 1, "", "annotate_heatmap"], [24, 3, 1, "", "heatmap"], [24, 3, 1, "", "payoff_headmap"]], "gomoku_rl.utils.wandb": [[25, 3, 1, "", "dict_flatten"], [25, 3, 1, "", "init_wandb"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"gomoku_rl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "packag": [0, 4, 9, 13], "subpackag": 0, "submodul": [0, 4, 9, 13], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "content": [0, 4, 9, 13, 26], "collector": 1, "core": 2, "env": 3, "polici": [4, 5, 6, 7, 8, 20], "base": [5, 10], "common": 6, "dqn": 7, "ppo": 8, "runner": [9, 10, 11, 12], "independent_rl_runn": 11, "psro_runn": 12, "util": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "augment": 14, "elo": 15, "eval": 16, "log": 17, "misc": 18, "psro": 21, "sampler": 22, "test": 23, "visual": 24, "wandb": 25, "welcom": 26, "": 26, "document": 26, "introduct": 26, "instal": 26, "usag": 26}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"gomoku_rl package": [[0, "gomoku-rl-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [4, "submodules"], [9, "submodules"], [13, "submodules"]], "Module contents": [[0, "module-gomoku_rl"], [4, "module-gomoku_rl.policy"], [9, "module-gomoku_rl.runner"], [13, "module-gomoku_rl.utils"]], "gomoku_rl.collector module": [[1, "module-gomoku_rl.collector"]], "gomoku_rl.core module": [[2, "module-gomoku_rl.core"]], "gomoku_rl.env module": [[3, "module-gomoku_rl.env"]], "gomoku_rl.policy package": [[4, "gomoku-rl-policy-package"]], "gomoku_rl.policy.base module": [[5, "module-gomoku_rl.policy.base"]], "gomoku_rl.policy.common module": [[6, "module-gomoku_rl.policy.common"]], "gomoku_rl.policy.dqn module": [[7, "module-gomoku_rl.policy.dqn"]], "gomoku_rl.policy.ppo module": [[8, "module-gomoku_rl.policy.ppo"]], "gomoku_rl.runner package": [[9, "gomoku-rl-runner-package"]], "gomoku_rl.runner.base module": [[10, "module-gomoku_rl.runner.base"]], "gomoku_rl.runner.independent_rl_runner module": [[11, "module-gomoku_rl.runner.independent_rl_runner"]], "gomoku_rl.runner.psro_runner module": [[12, "module-gomoku_rl.runner.psro_runner"]], "gomoku_rl.utils package": [[13, "gomoku-rl-utils-package"]], "gomoku_rl.utils.augment module": [[14, "module-gomoku_rl.utils.augment"]], "gomoku_rl.utils.elo module": [[15, "module-gomoku_rl.utils.elo"]], "gomoku_rl.utils.eval module": [[16, "module-gomoku_rl.utils.eval"]], "gomoku_rl.utils.log module": [[17, "module-gomoku_rl.utils.log"]], "gomoku_rl.utils.misc module": [[18, "module-gomoku_rl.utils.misc"]], "gomoku_rl.utils.module module": [[19, "module-gomoku_rl.utils.module"]], "gomoku_rl.utils.policy module": [[20, "module-gomoku_rl.utils.policy"]], "gomoku_rl.utils.psro module": [[21, "module-gomoku_rl.utils.psro"]], "gomoku_rl.utils.sampler module": [[22, "module-gomoku_rl.utils.sampler"]], "gomoku_rl.utils.test module": [[23, "module-gomoku_rl.utils.test"]], "gomoku_rl.utils.visual module": [[24, "module-gomoku_rl.utils.visual"]], "gomoku_rl.utils.wandb module": [[25, "module-gomoku_rl.utils.wandb"]], "Welcome to gomoku_rl\u2019s documentation!": [[26, "welcome-to-gomoku-rl-s-documentation"]], "Introduction": [[26, "introduction"]], "Installation": [[26, "installation"]], "Usage": [[26, "usage"]], "Contents:": [[26, null]], "gomoku_rl": [[27, "gomoku-rl"]]}, "indexentries": {"gomoku_rl": [[0, "module-gomoku_rl"]], "module": [[0, "module-gomoku_rl"], [1, "module-gomoku_rl.collector"], [2, "module-gomoku_rl.core"], [3, "module-gomoku_rl.env"], [4, "module-gomoku_rl.policy"], [5, "module-gomoku_rl.policy.base"], [6, "module-gomoku_rl.policy.common"], [7, "module-gomoku_rl.policy.dqn"], [8, "module-gomoku_rl.policy.ppo"], [9, "module-gomoku_rl.runner"], [10, "module-gomoku_rl.runner.base"], [11, "module-gomoku_rl.runner.independent_rl_runner"], [12, "module-gomoku_rl.runner.psro_runner"], [13, "module-gomoku_rl.utils"], [14, "module-gomoku_rl.utils.augment"], [15, "module-gomoku_rl.utils.elo"], [16, "module-gomoku_rl.utils.eval"], [17, "module-gomoku_rl.utils.log"], [18, "module-gomoku_rl.utils.misc"], [19, "module-gomoku_rl.utils.module"], [20, "module-gomoku_rl.utils.policy"], [21, "module-gomoku_rl.utils.psro"], [22, "module-gomoku_rl.utils.sampler"], [23, "module-gomoku_rl.utils.test"], [24, "module-gomoku_rl.utils.visual"], [25, "module-gomoku_rl.utils.wandb"]], "blackplaycollector (class in gomoku_rl.collector)": [[1, "gomoku_rl.collector.BlackPlayCollector"]], "collector (class in gomoku_rl.collector)": [[1, "gomoku_rl.collector.Collector"]], "selfplaycollector (class in gomoku_rl.collector)": [[1, "gomoku_rl.collector.SelfPlayCollector"]], "versusplaycollector (class in gomoku_rl.collector)": [[1, "gomoku_rl.collector.VersusPlayCollector"]], "whiteplaycollector (class in gomoku_rl.collector)": [[1, "gomoku_rl.collector.WhitePlayCollector"]], "__init__() (gomoku_rl.collector.blackplaycollector method)": [[1, "gomoku_rl.collector.BlackPlayCollector.__init__"]], "__init__() (gomoku_rl.collector.selfplaycollector method)": [[1, "gomoku_rl.collector.SelfPlayCollector.__init__"]], "__init__() (gomoku_rl.collector.versusplaycollector method)": [[1, "gomoku_rl.collector.VersusPlayCollector.__init__"]], "__init__() (gomoku_rl.collector.whiteplaycollector method)": [[1, "gomoku_rl.collector.WhitePlayCollector.__init__"]], "gomoku_rl.collector": [[1, "module-gomoku_rl.collector"]], "make_transition() (in module gomoku_rl.collector)": [[1, "gomoku_rl.collector.make_transition"]], "reset() (gomoku_rl.collector.blackplaycollector method)": [[1, "gomoku_rl.collector.BlackPlayCollector.reset"]], "reset() (gomoku_rl.collector.collector method)": [[1, "gomoku_rl.collector.Collector.reset"]], "reset() (gomoku_rl.collector.selfplaycollector method)": [[1, "gomoku_rl.collector.SelfPlayCollector.reset"]], "reset() (gomoku_rl.collector.versusplaycollector method)": [[1, "gomoku_rl.collector.VersusPlayCollector.reset"]], "reset() (gomoku_rl.collector.whiteplaycollector method)": [[1, "gomoku_rl.collector.WhitePlayCollector.reset"]], "rollout() (gomoku_rl.collector.blackplaycollector method)": [[1, "gomoku_rl.collector.BlackPlayCollector.rollout"]], "rollout() (gomoku_rl.collector.collector method)": [[1, "gomoku_rl.collector.Collector.rollout"]], "rollout() (gomoku_rl.collector.selfplaycollector method)": [[1, "gomoku_rl.collector.SelfPlayCollector.rollout"]], "rollout() (gomoku_rl.collector.versusplaycollector method)": [[1, "gomoku_rl.collector.VersusPlayCollector.rollout"]], "rollout() (gomoku_rl.collector.whiteplaycollector method)": [[1, "gomoku_rl.collector.WhitePlayCollector.rollout"]], "round() (in module gomoku_rl.collector)": [[1, "gomoku_rl.collector.round"]], "self_play_step() (in module gomoku_rl.collector)": [[1, "gomoku_rl.collector.self_play_step"]], "gomoku (class in gomoku_rl.core)": [[2, "gomoku_rl.core.Gomoku"]], "__init__() (gomoku_rl.core.gomoku method)": [[2, "gomoku_rl.core.Gomoku.__init__"]], "compute_done() (in module gomoku_rl.core)": [[2, "gomoku_rl.core.compute_done"]], "get_action_mask() (gomoku_rl.core.gomoku method)": [[2, "gomoku_rl.core.Gomoku.get_action_mask"]], "get_encoded_board() (gomoku_rl.core.gomoku method)": [[2, "gomoku_rl.core.Gomoku.get_encoded_board"]], "gomoku_rl.core": [[2, "module-gomoku_rl.core"]], "is_valid() (gomoku_rl.core.gomoku method)": [[2, "gomoku_rl.core.Gomoku.is_valid"]], "reset() (gomoku_rl.core.gomoku method)": [[2, "gomoku_rl.core.Gomoku.reset"]], "step() (gomoku_rl.core.gomoku method)": [[2, "gomoku_rl.core.Gomoku.step"]], "to() (gomoku_rl.core.gomoku method)": [[2, "gomoku_rl.core.Gomoku.to"]], "gomokuenv (class in gomoku_rl.env)": [[3, "gomoku_rl.env.GomokuEnv"]], "__init__() (gomoku_rl.env.gomokuenv method)": [[3, "gomoku_rl.env.GomokuEnv.__init__"]], "batch_size (gomoku_rl.env.gomokuenv property)": [[3, "gomoku_rl.env.GomokuEnv.batch_size"]], "board_size (gomoku_rl.env.gomokuenv property)": [[3, "gomoku_rl.env.GomokuEnv.board_size"]], "device (gomoku_rl.env.gomokuenv property)": [[3, "gomoku_rl.env.GomokuEnv.device"]], "gomoku_rl.env": [[3, "module-gomoku_rl.env"]], "num_envs (gomoku_rl.env.gomokuenv property)": [[3, "gomoku_rl.env.GomokuEnv.num_envs"]], "reset() (gomoku_rl.env.gomokuenv method)": [[3, "gomoku_rl.env.GomokuEnv.reset"]], "set_post_step() (gomoku_rl.env.gomokuenv method)": [[3, "gomoku_rl.env.GomokuEnv.set_post_step"]], "step() (gomoku_rl.env.gomokuenv method)": [[3, "gomoku_rl.env.GomokuEnv.step"]], "step_and_maybe_reset() (gomoku_rl.env.gomokuenv method)": [[3, "gomoku_rl.env.GomokuEnv.step_and_maybe_reset"]], "get_policy() (in module gomoku_rl.policy)": [[4, "gomoku_rl.policy.get_policy"]], "get_pretrained_policy() (in module gomoku_rl.policy)": [[4, "gomoku_rl.policy.get_pretrained_policy"]], "gomoku_rl.policy": [[4, "module-gomoku_rl.policy"]], "policy (class in gomoku_rl.policy.base)": [[5, "gomoku_rl.policy.base.Policy"]], "registry (gomoku_rl.policy.base.policy attribute)": [[5, "gomoku_rl.policy.base.Policy.REGISTRY"]], "__call__() (gomoku_rl.policy.base.policy method)": [[5, "gomoku_rl.policy.base.Policy.__call__"]], "__init__() (gomoku_rl.policy.base.policy method)": [[5, "gomoku_rl.policy.base.Policy.__init__"]], "eval() (gomoku_rl.policy.base.policy method)": [[5, "gomoku_rl.policy.base.Policy.eval"]], "gomoku_rl.policy.base": [[5, "module-gomoku_rl.policy.base"]], "learn() (gomoku_rl.policy.base.policy method)": [[5, "gomoku_rl.policy.base.Policy.learn"]], "load_state_dict() (gomoku_rl.policy.base.policy method)": [[5, "gomoku_rl.policy.base.Policy.load_state_dict"]], "state_dict() (gomoku_rl.policy.base.policy method)": [[5, "gomoku_rl.policy.base.Policy.state_dict"]], "train() (gomoku_rl.policy.base.policy method)": [[5, "gomoku_rl.policy.base.Policy.train"]], "get_optimizer() (in module gomoku_rl.policy.common)": [[6, "gomoku_rl.policy.common.get_optimizer"]], "gomoku_rl.policy.common": [[6, "module-gomoku_rl.policy.common"]], "make_critic() (in module gomoku_rl.policy.common)": [[6, "gomoku_rl.policy.common.make_critic"]], "make_dataset_naive() (in module gomoku_rl.policy.common)": [[6, "gomoku_rl.policy.common.make_dataset_naive"]], "make_dqn_actor() (in module gomoku_rl.policy.common)": [[6, "gomoku_rl.policy.common.make_dqn_actor"]], "make_egreedy_actor() (in module gomoku_rl.policy.common)": [[6, "gomoku_rl.policy.common.make_egreedy_actor"]], "make_ppo_ac() (in module gomoku_rl.policy.common)": [[6, "gomoku_rl.policy.common.make_ppo_ac"]], "make_ppo_actor() (in module gomoku_rl.policy.common)": [[6, "gomoku_rl.policy.common.make_ppo_actor"]], "dqn (class in gomoku_rl.policy.dqn)": [[7, "gomoku_rl.policy.dqn.DQN"]], "eval() (gomoku_rl.policy.dqn.dqn method)": [[7, "gomoku_rl.policy.dqn.DQN.eval"]], "get_replay_buffer() (in module gomoku_rl.policy.dqn)": [[7, "gomoku_rl.policy.dqn.get_replay_buffer"]], "gomoku_rl.policy.dqn": [[7, "module-gomoku_rl.policy.dqn"]], "learn() (gomoku_rl.policy.dqn.dqn method)": [[7, "gomoku_rl.policy.dqn.DQN.learn"]], "load_state_dict() (gomoku_rl.policy.dqn.dqn method)": [[7, "gomoku_rl.policy.dqn.DQN.load_state_dict"]], "state_dict() (gomoku_rl.policy.dqn.dqn method)": [[7, "gomoku_rl.policy.dqn.DQN.state_dict"]], "train() (gomoku_rl.policy.dqn.dqn method)": [[7, "gomoku_rl.policy.dqn.DQN.train"]], "ppo (class in gomoku_rl.policy.ppo)": [[8, "gomoku_rl.policy.ppo.PPO"]], "eval() (gomoku_rl.policy.ppo.ppo method)": [[8, "gomoku_rl.policy.ppo.PPO.eval"]], "gomoku_rl.policy.ppo": [[8, "module-gomoku_rl.policy.ppo"]], "learn() (gomoku_rl.policy.ppo.ppo method)": [[8, "gomoku_rl.policy.ppo.PPO.learn"]], "load_state_dict() (gomoku_rl.policy.ppo.ppo method)": [[8, "gomoku_rl.policy.ppo.PPO.load_state_dict"]], "state_dict() (gomoku_rl.policy.ppo.ppo method)": [[8, "gomoku_rl.policy.ppo.PPO.state_dict"]], "train() (gomoku_rl.policy.ppo.ppo method)": [[8, "gomoku_rl.policy.ppo.PPO.train"]], "gomoku_rl.runner": [[9, "module-gomoku_rl.runner"]], "runner (class in gomoku_rl.runner.base)": [[10, "gomoku_rl.runner.base.Runner"]], "sprunner (class in gomoku_rl.runner.base)": [[10, "gomoku_rl.runner.base.SPRunner"]], "gomoku_rl.runner.base": [[10, "module-gomoku_rl.runner.base"]], "run() (gomoku_rl.runner.base.runner method)": [[10, "gomoku_rl.runner.base.Runner.run"]], "run() (gomoku_rl.runner.base.sprunner method)": [[10, "gomoku_rl.runner.base.SPRunner.run"]], "independentrlrunner (class in gomoku_rl.runner.independent_rl_runner)": [[11, "gomoku_rl.runner.independent_rl_runner.IndependentRLRunner"]], "independentrlsprunner (class in gomoku_rl.runner.independent_rl_runner)": [[11, "gomoku_rl.runner.independent_rl_runner.IndependentRLSPRunner"]], "gomoku_rl.runner.independent_rl_runner": [[11, "module-gomoku_rl.runner.independent_rl_runner"]], "psrorunner (class in gomoku_rl.runner.psro_runner)": [[12, "gomoku_rl.runner.psro_runner.PSRORunner"]], "psrosprunner (class in gomoku_rl.runner.psro_runner)": [[12, "gomoku_rl.runner.psro_runner.PSROSPRunner"]], "gomoku_rl.runner.psro_runner": [[12, "module-gomoku_rl.runner.psro_runner"]], "gomoku_rl.utils": [[13, "module-gomoku_rl.utils"]], "antidiagonalflip (class in gomoku_rl.utils.augment)": [[14, "gomoku_rl.utils.augment.AntiDiagonalFlip"]], "diagonalflip (class in gomoku_rl.utils.augment)": [[14, "gomoku_rl.utils.augment.DiagonalFlip"]], "horizontalflip (class in gomoku_rl.utils.augment)": [[14, "gomoku_rl.utils.augment.HorizontalFlip"]], "identity (class in gomoku_rl.utils.augment)": [[14, "gomoku_rl.utils.augment.Identity"]], "rotation (class in gomoku_rl.utils.augment)": [[14, "gomoku_rl.utils.augment.Rotation"]], "transform (class in gomoku_rl.utils.augment)": [[14, "gomoku_rl.utils.augment.Transform"]], "verticalflip (class in gomoku_rl.utils.augment)": [[14, "gomoku_rl.utils.augment.VerticalFlip"]], "augment_transition() (in module gomoku_rl.utils.augment)": [[14, "gomoku_rl.utils.augment.augment_transition"]], "get_augmented_transition() (in module gomoku_rl.utils.augment)": [[14, "gomoku_rl.utils.augment.get_augmented_transition"]], "gomoku_rl.utils.augment": [[14, "module-gomoku_rl.utils.augment"]], "inverse_map_board() (gomoku_rl.utils.augment.antidiagonalflip method)": [[14, "gomoku_rl.utils.augment.AntiDiagonalFlip.inverse_map_board"]], "inverse_map_board() (gomoku_rl.utils.augment.diagonalflip method)": [[14, "gomoku_rl.utils.augment.DiagonalFlip.inverse_map_board"]], "inverse_map_board() (gomoku_rl.utils.augment.horizontalflip method)": [[14, "gomoku_rl.utils.augment.HorizontalFlip.inverse_map_board"]], "inverse_map_board() (gomoku_rl.utils.augment.identity method)": [[14, "gomoku_rl.utils.augment.Identity.inverse_map_board"]], "inverse_map_board() (gomoku_rl.utils.augment.rotation method)": [[14, "gomoku_rl.utils.augment.Rotation.inverse_map_board"]], "inverse_map_board() (gomoku_rl.utils.augment.transform method)": [[14, "gomoku_rl.utils.augment.Transform.inverse_map_board"]], "inverse_map_board() (gomoku_rl.utils.augment.verticalflip method)": [[14, "gomoku_rl.utils.augment.VerticalFlip.inverse_map_board"]], "inverse_map_index() (gomoku_rl.utils.augment.antidiagonalflip method)": [[14, "gomoku_rl.utils.augment.AntiDiagonalFlip.inverse_map_index"]], "inverse_map_index() (gomoku_rl.utils.augment.diagonalflip method)": [[14, "gomoku_rl.utils.augment.DiagonalFlip.inverse_map_index"]], "inverse_map_index() (gomoku_rl.utils.augment.horizontalflip method)": [[14, "gomoku_rl.utils.augment.HorizontalFlip.inverse_map_index"]], "inverse_map_index() (gomoku_rl.utils.augment.identity method)": [[14, "gomoku_rl.utils.augment.Identity.inverse_map_index"]], "inverse_map_index() (gomoku_rl.utils.augment.rotation method)": [[14, "gomoku_rl.utils.augment.Rotation.inverse_map_index"]], "inverse_map_index() (gomoku_rl.utils.augment.transform method)": [[14, "gomoku_rl.utils.augment.Transform.inverse_map_index"]], "inverse_map_index() (gomoku_rl.utils.augment.verticalflip method)": [[14, "gomoku_rl.utils.augment.VerticalFlip.inverse_map_index"]], "map_board() (gomoku_rl.utils.augment.antidiagonalflip method)": [[14, "gomoku_rl.utils.augment.AntiDiagonalFlip.map_board"]], "map_board() (gomoku_rl.utils.augment.diagonalflip method)": [[14, "gomoku_rl.utils.augment.DiagonalFlip.map_board"]], "map_board() (gomoku_rl.utils.augment.horizontalflip method)": [[14, "gomoku_rl.utils.augment.HorizontalFlip.map_board"]], "map_board() (gomoku_rl.utils.augment.identity method)": [[14, "gomoku_rl.utils.augment.Identity.map_board"]], "map_board() (gomoku_rl.utils.augment.rotation method)": [[14, "gomoku_rl.utils.augment.Rotation.map_board"]], "map_board() (gomoku_rl.utils.augment.transform method)": [[14, "gomoku_rl.utils.augment.Transform.map_board"]], "map_board() (gomoku_rl.utils.augment.verticalflip method)": [[14, "gomoku_rl.utils.augment.VerticalFlip.map_board"]], "map_index() (gomoku_rl.utils.augment.antidiagonalflip method)": [[14, "gomoku_rl.utils.augment.AntiDiagonalFlip.map_index"]], "map_index() (gomoku_rl.utils.augment.diagonalflip method)": [[14, "gomoku_rl.utils.augment.DiagonalFlip.map_index"]], "map_index() (gomoku_rl.utils.augment.horizontalflip method)": [[14, "gomoku_rl.utils.augment.HorizontalFlip.map_index"]], "map_index() (gomoku_rl.utils.augment.identity method)": [[14, "gomoku_rl.utils.augment.Identity.map_index"]], "map_index() (gomoku_rl.utils.augment.rotation method)": [[14, "gomoku_rl.utils.augment.Rotation.map_index"]], "map_index() (gomoku_rl.utils.augment.transform method)": [[14, "gomoku_rl.utils.augment.Transform.map_index"]], "map_index() (gomoku_rl.utils.augment.verticalflip method)": [[14, "gomoku_rl.utils.augment.VerticalFlip.map_index"]], "elo (class in gomoku_rl.utils.elo)": [[15, "gomoku_rl.utils.elo.Elo"]], "addplayer() (gomoku_rl.utils.elo.elo method)": [[15, "gomoku_rl.utils.elo.Elo.addPlayer"]], "compute_elo_ratings() (in module gomoku_rl.utils.elo)": [[15, "gomoku_rl.utils.elo.compute_elo_ratings"]], "compute_expected_score() (in module gomoku_rl.utils.elo)": [[15, "gomoku_rl.utils.elo.compute_expected_score"]], "expected_score() (gomoku_rl.utils.elo.elo method)": [[15, "gomoku_rl.utils.elo.Elo.expected_score"]], "gomoku_rl.utils.elo": [[15, "module-gomoku_rl.utils.elo"]], "update() (gomoku_rl.utils.elo.elo method)": [[15, "gomoku_rl.utils.elo.Elo.update"]], "eval_win_rate() (in module gomoku_rl.utils.eval)": [[16, "gomoku_rl.utils.eval.eval_win_rate"]], "get_payoff_matrix() (in module gomoku_rl.utils.eval)": [[16, "gomoku_rl.utils.eval.get_payoff_matrix"]], "gomoku_rl.utils.eval": [[16, "module-gomoku_rl.utils.eval"]], "mean (class in gomoku_rl.utils.log)": [[17, "gomoku_rl.utils.log.Mean"]], "get_log_func() (in module gomoku_rl.utils.log)": [[17, "gomoku_rl.utils.log.get_log_func"]], "gomoku_rl.utils.log": [[17, "module-gomoku_rl.utils.log"]], "update() (gomoku_rl.utils.log.mean method)": [[17, "gomoku_rl.utils.log.Mean.update"]], "value (gomoku_rl.utils.log.mean property)": [[17, "gomoku_rl.utils.log.Mean.value"]], "add_prefix() (in module gomoku_rl.utils.misc)": [[18, "gomoku_rl.utils.misc.add_prefix"]], "get_kwargs() (in module gomoku_rl.utils.misc)": [[18, "gomoku_rl.utils.misc.get_kwargs"]], "gomoku_rl.utils.misc": [[18, "module-gomoku_rl.utils.misc"]], "set_seed() (in module gomoku_rl.utils.misc)": [[18, "gomoku_rl.utils.misc.set_seed"]], "actornet (class in gomoku_rl.utils.module)": [[19, "gomoku_rl.utils.module.ActorNet"]], "myduelingcnndqnet (class in gomoku_rl.utils.module)": [[19, "gomoku_rl.utils.module.MyDuelingCnnDQNet"]], "policyhead (class in gomoku_rl.utils.module)": [[19, "gomoku_rl.utils.module.PolicyHead"]], "residualblock (class in gomoku_rl.utils.module)": [[19, "gomoku_rl.utils.module.ResidualBlock"]], "residualtower (class in gomoku_rl.utils.module)": [[19, "gomoku_rl.utils.module.ResidualTower"]], "valuehead (class in gomoku_rl.utils.module)": [[19, "gomoku_rl.utils.module.ValueHead"]], "valuenet (class in gomoku_rl.utils.module)": [[19, "gomoku_rl.utils.module.ValueNet"]], "count_parameters() (in module gomoku_rl.utils.module)": [[19, "gomoku_rl.utils.module.count_parameters"]], "forward() (gomoku_rl.utils.module.actornet method)": [[19, "gomoku_rl.utils.module.ActorNet.forward"]], "forward() (gomoku_rl.utils.module.myduelingcnndqnet method)": [[19, "gomoku_rl.utils.module.MyDuelingCnnDQNet.forward"]], "forward() (gomoku_rl.utils.module.policyhead method)": [[19, "gomoku_rl.utils.module.PolicyHead.forward"]], "forward() (gomoku_rl.utils.module.residualblock method)": [[19, "gomoku_rl.utils.module.ResidualBlock.forward"]], "forward() (gomoku_rl.utils.module.residualtower method)": [[19, "gomoku_rl.utils.module.ResidualTower.forward"]], "forward() (gomoku_rl.utils.module.valuehead method)": [[19, "gomoku_rl.utils.module.ValueHead.forward"]], "forward() (gomoku_rl.utils.module.valuenet method)": [[19, "gomoku_rl.utils.module.ValueNet.forward"]], "gomoku_rl.utils.module": [[19, "module-gomoku_rl.utils.module"]], "init_params() (in module gomoku_rl.utils.module)": [[19, "gomoku_rl.utils.module.init_params"]], "gomoku_rl.utils.policy": [[20, "module-gomoku_rl.utils.policy"]], "uniform_policy() (in module gomoku_rl.utils.policy)": [[20, "gomoku_rl.utils.policy.uniform_policy"]], "convergedindicator (class in gomoku_rl.utils.psro)": [[21, "gomoku_rl.utils.psro.ConvergedIndicator"]], "psropolicywrapper (class in gomoku_rl.utils.psro)": [[21, "gomoku_rl.utils.psro.PSROPolicyWrapper"]], "payofftype (class in gomoku_rl.utils.psro)": [[21, "gomoku_rl.utils.psro.PayoffType"]], "population (class in gomoku_rl.utils.psro)": [[21, "gomoku_rl.utils.psro.Population"]], "add() (gomoku_rl.utils.psro.population method)": [[21, "gomoku_rl.utils.psro.Population.add"]], "add_current_policy() (gomoku_rl.utils.psro.psropolicywrapper method)": [[21, "gomoku_rl.utils.psro.PSROPolicyWrapper.add_current_policy"]], "black_vs_white (gomoku_rl.utils.psro.payofftype attribute)": [[21, "gomoku_rl.utils.psro.PayoffType.black_vs_white"]], "both (gomoku_rl.utils.psro.payofftype attribute)": [[21, "gomoku_rl.utils.psro.PayoffType.both"]], "calculate_jpc() (in module gomoku_rl.utils.psro)": [[21, "gomoku_rl.utils.psro.calculate_jpc"]], "converged() (gomoku_rl.utils.psro.convergedindicator method)": [[21, "gomoku_rl.utils.psro.ConvergedIndicator.converged"]], "eval() (gomoku_rl.utils.psro.psropolicywrapper method)": [[21, "gomoku_rl.utils.psro.PSROPolicyWrapper.eval"]], "fixed_behavioural_strategy() (gomoku_rl.utils.psro.population method)": [[21, "gomoku_rl.utils.psro.Population.fixed_behavioural_strategy"]], "get_meta_solver() (in module gomoku_rl.utils.psro)": [[21, "gomoku_rl.utils.psro.get_meta_solver"]], "get_new_payoffs() (in module gomoku_rl.utils.psro)": [[21, "gomoku_rl.utils.psro.get_new_payoffs"]], "get_new_payoffs_sp() (in module gomoku_rl.utils.psro)": [[21, "gomoku_rl.utils.psro.get_new_payoffs_sp"]], "gomoku_rl.utils.psro": [[21, "module-gomoku_rl.utils.psro"]], "init_payoffs_sp() (in module gomoku_rl.utils.psro)": [[21, "gomoku_rl.utils.psro.init_payoffs_sp"]], "make_behavioural_strategy() (gomoku_rl.utils.psro.population method)": [[21, "gomoku_rl.utils.psro.Population.make_behavioural_strategy"]], "print_payoffs() (in module gomoku_rl.utils.psro)": [[21, "gomoku_rl.utils.psro.print_payoffs"]], "reset() (gomoku_rl.utils.psro.convergedindicator method)": [[21, "gomoku_rl.utils.psro.ConvergedIndicator.reset"]], "sample() (gomoku_rl.utils.psro.psropolicywrapper method)": [[21, "gomoku_rl.utils.psro.PSROPolicyWrapper.sample"]], "sample() (gomoku_rl.utils.psro.population method)": [[21, "gomoku_rl.utils.psro.Population.sample"]], "set_meta_policy() (gomoku_rl.utils.psro.psropolicywrapper method)": [[21, "gomoku_rl.utils.psro.PSROPolicyWrapper.set_meta_policy"]], "set_oracle_mode() (gomoku_rl.utils.psro.psropolicywrapper method)": [[21, "gomoku_rl.utils.psro.PSROPolicyWrapper.set_oracle_mode"]], "solve_last_n() (in module gomoku_rl.utils.psro)": [[21, "gomoku_rl.utils.psro.solve_last_n"]], "solve_nash() (in module gomoku_rl.utils.psro)": [[21, "gomoku_rl.utils.psro.solve_nash"]], "solve_uniform() (in module gomoku_rl.utils.psro)": [[21, "gomoku_rl.utils.psro.solve_uniform"]], "train() (gomoku_rl.utils.psro.psropolicywrapper method)": [[21, "gomoku_rl.utils.psro.PSROPolicyWrapper.train"]], "update() (gomoku_rl.utils.psro.convergedindicator method)": [[21, "gomoku_rl.utils.psro.ConvergedIndicator.update"]], "sequentialsampler (class in gomoku_rl.utils.sampler)": [[22, "gomoku_rl.utils.sampler.SequentialSampler"]], "gomoku_rl.utils.sampler": [[22, "module-gomoku_rl.utils.sampler"]], "ran_out (gomoku_rl.utils.sampler.sequentialsampler property)": [[22, "gomoku_rl.utils.sampler.SequentialSampler.ran_out"]], "sample() (gomoku_rl.utils.sampler.sequentialsampler method)": [[22, "gomoku_rl.utils.sampler.SequentialSampler.sample"]], "type (class in gomoku_rl.utils.test)": [[23, "gomoku_rl.utils.test.Type"]], "assert_layer_transition() (in module gomoku_rl.utils.test)": [[23, "gomoku_rl.utils.test.assert_layer_transition"]], "assert_observation() (in module gomoku_rl.utils.test)": [[23, "gomoku_rl.utils.test.assert_observation"]], "assert_tensor_1d_all() (in module gomoku_rl.utils.test)": [[23, "gomoku_rl.utils.test.assert_tensor_1d_all"]], "assert_transition() (in module gomoku_rl.utils.test)": [[23, "gomoku_rl.utils.test.assert_transition"]], "black (gomoku_rl.utils.test.type attribute)": [[23, "gomoku_rl.utils.test.Type.black"]], "gomoku_rl.utils.test": [[23, "module-gomoku_rl.utils.test"]], "mixed (gomoku_rl.utils.test.type attribute)": [[23, "gomoku_rl.utils.test.Type.mixed"]], "no_nan_in_tensordict() (in module gomoku_rl.utils.test)": [[23, "gomoku_rl.utils.test.no_nan_in_tensordict"]], "white (gomoku_rl.utils.test.type attribute)": [[23, "gomoku_rl.utils.test.Type.white"]], "annotate_heatmap() (in module gomoku_rl.utils.visual)": [[24, "gomoku_rl.utils.visual.annotate_heatmap"]], "gomoku_rl.utils.visual": [[24, "module-gomoku_rl.utils.visual"]], "heatmap() (in module gomoku_rl.utils.visual)": [[24, "gomoku_rl.utils.visual.heatmap"]], "payoff_headmap() (in module gomoku_rl.utils.visual)": [[24, "gomoku_rl.utils.visual.payoff_headmap"]], "dict_flatten() (in module gomoku_rl.utils.wandb)": [[25, "gomoku_rl.utils.wandb.dict_flatten"]], "gomoku_rl.utils.wandb": [[25, "module-gomoku_rl.utils.wandb"]], "init_wandb() (in module gomoku_rl.utils.wandb)": [[25, "gomoku_rl.utils.wandb.init_wandb"]]}})